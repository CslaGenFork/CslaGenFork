CslaGenerator
******************************************************************************

++++++++++++++++++++++++++++++++
+ date: 10. March 2005.        +
+ updated by: Miroslav Popovic +
++++++++++++++++++++++++++++++++


METADATA
-----------
- Added documentation properties to the Property class (Summary, Remarks).
 	{Maybe these properties should be in the ValueProperty and the ChildProperty classes?
	Now they are displayed in the PropertyGrid when creating Properties for the Criteria objects and they shouldn't be there.}
- Added ReadOnly property to the Property class.
- Added XmlCommentEditor and XmlCommentEditorForm for editing Xml Comment tags <summary> and <remarks>
	- Multiline support. 
	- Buttons for adding inner tags.
- CslaTemplateHelper for C# is modified to become base class for other language template helpers:
	- Added GetXmlCommentString method.
	- Added GetUsingStatementsString method for creating using (Imports) command block.
	- Added IndentLevel property for indentation of multiple lines of text (GetRelationString and GetXmlCommentString).
	- GetCSharpVariableType method became the GetLanguageVariableType method.
	- Methods GetInitValue, GetReaderAssignmentStatement, GetLanguageVariableType, GetRelationString, GetUsingStatementString and GetXmlCommentString are declared as virtual.
- VbCslaTemplateHelper inherites CslaTemplateHelper and redefines his virtual (overridable) methods.
- Removed reference to MagicLibrary
- Removed CslaExtension project from solution (Didn't find any reference to it in templates, so I think it's unnecessary)
- Fixed errors in TypeInfo.cs. 
	- Clone() method used BinarySerialization. Switched to XmlSerialization.
	- Parent property missing, causing errors in CslaObjectInfoEditor. Added Parent property and another constructor with parent parameter. Parent property is set through GeneratorControler.Load() or TypeInfo constructor.


TEMPLATES
------------
- (C#, VB) Fixed template's and template parameter's descriptions.
- (C#, VB) Fixed some formatting issues in the output code.
- (C#, VB) Added XML comments for all generated properties and methods.
- (C#, VB) Broken rules validation is now done through the CheckRules method (region "Business Object Rules and Validation").
	CheckRules is protected virtual (overridable) method, so it can be redefined in the inherited classes.
	CheckRules is defined in a new include file "BusinessRules.inc".
- (C#, VB) IsValid and IsDirty are not overriden if business object has no child or child collection parameters
- (C#, VB) Removed CodeBehind (src) attributes from template declarations. Templates are inherited from the (Vb)CslaTemplateHelper which is contained in the CslaGenerator assembly.
- (C#, VB) Some template code is extracted to new include files: InternalFetch.inc, InternalGetObject.inc, BusinessRules.inc, CollectionDataPortalFetch.inc, CollectionGetObject.inc
- (C#, VB) Some old include files are rewriten to support more templates:
	- Collection templates use a new include file: CollectionDataPortalFetch.inc
	- EditableChild template use the NewObject.inc include file
	- EditableSwitchable template use the Constructor.inc include file
	- EditableChild and EditableSwitchable templates use a new include file: InternalFetch.inc
	- EditableSwitchable template use the DataPortalCreate.inc include file
	- ReadOnlyObject template use the BusinessProps.inc include file
- (C#, VB) master.cst has two new properties:
	- SeparateBaseClasses (When true, base classes are generated into 'Base' subfolder of object's folder)
	{Maybe base classes could be generated into separate Base 'sub-namespace' of current namespace?}
	- SeparateNamespaces (When true, classes are generated into subfolders, based on namespace name)
	I.e. If namespace of the Product object is Library.Warehouse.Content, then Product.cs will be generated into 'Library\Warehouse\Content' subfolder.
- (C#, VB) Added using (Imports) statement block for importing namespaces of child classes, item class or parent class if they are different than current namespace. This was an oversight of old CslaGenerator.
- (C#, VB) Added XmlComment header to all templates.
- (C#, VB) Added empty XmlComment header to InheritFromBase template.


++++++++++++++++++++++++++++++++
+ date: 11. March 2005.        +
+ updated by: Miroslav Popovic +
++++++++++++++++++++++++++++++++


METADATA
-----------
- Fixed generation of using (Imports) block. Current namespace will not be added to using block.
- Added new property category ("A. Security"), containing GetRoles, NewRoles, UpdateRoles and DeleteRoles properties
	- These four properties are simple strings. They can contain more than one role, separated by ";"


TEMPLATES
-----------
- (VB) Fixed error in InternalUpdate.inc. Declaration of Update method is corected.
- (C#, VB) Added Save.inc include file, containing overloaded declaration of Save method.
	- Save method is overloaded when either of DeleteRoles and UpdateRoles is not empty.
- (C#, VB) Added security check to all Get..., New... and Delete... methods.


++++++++++++++++++++++++++++++++
+ date: 16. March 2005.        +
+ updated by: Miroslav Popovic +
++++++++++++++++++++++++++++++++


METADATA
-----------
- Fixed error in CslaObjectInfo.cs.
	- Duplicate() method used BinarySerialization. Switched to XmlSerialization.
- Sorted properties in CslaObjectInfo.cs by appearance in PropertyGrid, and added some missing XML comments.
- Modifed description for ValueProperties property of CslaObjectInfo class.
	- Instead of "use the keyword value", now is "use the property name".
- Commented out ExecuteProcedure method (and it's derivates) of GeneratorController.
- Commented out SelectProcedure, InsertProcedure, DeleteProcedure and UpdateProcedure properties of CslaObjectInfo.
- Commented out btnExecute<proc_name>_Click event handlers from GeneratorController.
- Added one overload for the Message method of CslaTamplateHelper class.
- Added new property to the CslaObjectInfo class: ParentProperty, category "4. Child Object Options"
	- This property is used in the Update function to set parameter values from parent object to stored procedures.
- Added new type editor for ParentProperty: ParentPropertyCollectionEditor


TEMPLATES
-----------
- (C#, VB) Added two more overloads of Equal method (shared Equals method and Object.Equals override) to ObjectOverrides.inc
- (C#, VB) All base classes are now declared as "virtual" ("MustOverride"), because they only exists for purpose of code generation.
- (VB) Fixed minor error in InternalUpdate.inc and DataPortalUpdate.inc.
	- If one of the columns is PrimaryKey, then InputOutput parameter would be assigned to that column and all following columns.
- (C#, VB) Fixed XML comment in FindMethods.inc.
- (C#, VB) Fixed error in GetNamespaceDirectory() method of Master.cst template.
- (C#, VB) Fixed two lines in BusinessProps.inc:
	- From: <%=FormatFieldName(prop.Name)%> = <%=prop.Name%>.Get<%=prop.Name%>
	- To:   <%=FormatFieldName(prop.Name)%> = <%=prop.Name%>.Get<%=prop.TypeName%>
- (C#, VB) Modified InternalUpdate.inc to use new ParentProperty.
- (C#, VB) Modified shared factory method for creating new objects.
	- This method now use overloaded constructor with parameters, instead of DataPortal.Create method.
	- DataPortal_Create is intended only for retrieveing defaults from a database.
	- Default constructor sets the default values for the object properties.
	- Constructor with parameters sets the values from the shared factory method New<ObjectName> parameters.
	- ConstructorChild.inc is removed. Constructor.inc calls the MarkAsChild() method when necessary.
	- Child factory methods in the EditableSwitchable.cst are using same creating scheme.


++++++++++++++++++++++++++++++++
+ date: 17. March 2005.        +
+ updated by: Miroslav Popovic +
++++++++++++++++++++++++++++++++


METADATA
-----------
- Added Identity and NativeType properties to DbBindColumn.
- Changed AddPropertiesForSelectedColumn() method of GeneratorController class.
	- If current table column is Identity, ValueProperty.ReadOnly = true, .MarkDirtyOnChange = false, .Undoable = false.
	- If current column's datatype is timestamp, ValueProperty.ReadOnly = true, .MarkDirtyOnChange = false, .Undoable = false.
- Added AddCriteriaAndParameters method to the GeneratorController.
	- This method is called from the AddPropertiesForSelectedColumn() method.
	- All necessary criteria objects, parameters for Get-, New- and DeleteObject and Equals, HashCode and ToString properties are created from the primary key and timestamp columns.
- Fixed errors in Property.cs, ValueProperty.cs, ChildProperty.cs. 
	- Clone() method used BinarySerialization. Switched to XmlSerialization.
- Removed some unnecessary references to System.Runtime.Serialization.Formatters.Binary namespace.


TEMPLATES
------------
- DataPortalUpdate.inc and InternalUpdate.inc are now supporting concurrency updates with timestamp columns.
	- When timestamp column is found in object properties, template generates two stored procedure parameters for the update. One is normal parameter @ColumnName and other is Output parameter @NewColumnName. When insert or update is performed, new timestamp value is read from @NewColumnName parameter and stored in the objects property.
	
	
++++++++++++++++++++++++++++++++
+ date: 26. March 2005.        +
+ updated by: Joakim Hallberg  +
++++++++++++++++++++++++++++++++


METADATA
-----------
- Fixed bug when datatype in database was declared as Real. 


++++++++++++++++++++++++++++++++
+ date: 2. May 2005.        +
+ updated by: Joakim Hallberg  +
++++++++++++++++++++++++++++++++


METADATA
-----------
- C# Templates. Fixed bugs reported MSNGroups for vb templates. 
