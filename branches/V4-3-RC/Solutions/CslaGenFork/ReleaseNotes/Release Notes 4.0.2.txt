CslaGenFork v.4.0.2 Release Notes
=================================
All features and corrections refer to CSLA4 target projects, except when stated otherwise.

1. New Features
===============

1.1. Internal
-------------
New ICodeGenerator interface to support different code generator classes (pre and post CSLA 4) 
CslaGen code generation engine was restored back, in order to be used by pre CSLA 4 projects (greater compatibility for old projects) 
New code generation engine for CSLA 4 projects (greater flexibility as there is no legacy to support) 
CSLA4 engine uses a consolidated CslaTemplateHelper file (easier to port to VB) 
PropertyContext.xml was moved to the solution's root

1.2. Templates
--------------
Small fixes to C# templates for CSLA2 
Templates with extension INC were renamed to ASP (easier to edit under Notepad++ or Visual Studio) 
When generating code for multi-target UI environments, there are now only two possible conditional compiler directives: WINFORMS and SILVERLIGHT 
All DataPortal methods on child objects use Child_XYZ and there is no option to use old-style DataPortal_XYZ 
PropertyInfo is now readonly 
Small corrections to RaiseListChangedEvents handling as per Using Csla 4: Data Access ebook guidelines 
A setter is generated for child properties 
DataPortal_Create calls the DataPortal.CreateChild (and no longer child Factory method) 
Lazy loading raises OnPropertyChanged event 
Base namespace handling for easier separation of namespaces in folders 
Extend Simple Cache to DataPortal_Fetch 
Extend Simple Cache to ReadOnly collections 
Major refactoring of all templates (including Dynamic objects/collections and EditableSwitchable)

1.3. User Interface
-------------------
Project Properties panel was partially re-designed and some tabs have child tabs (Creation and Generation) 
Improvements of Create gestures (right click for you and me) on Schema Objects and Columns panels 
New Base namespace generation setting 
New options for Asynchronous methods and Silverlight generation 
New options for DAL generation (Encapsulated Invoke model) [Generation not implemented] 
On child properties panel and ORB,, LazyLoad is shown only when Loading Scheme is SelfLoad 
New project name defaults to MyProject 
Factory default of all namespaces in Project Properties begin with MyProject. 
Discontinue ActiveObjects support 
Discontinue Update Value Properties support (Note - Was introduced in CTP 1.) 
Discontinue the ValueProperty setting PropertyInfo Accessibility. Now it's project option you can find under Generation => Misc 
Discontinue option Cache Results and introduce a Cache Results Options option (visible for NameValueList and ReadOnlyCollection) 
Support for criteria using base classes CriteriaBase or BusinessBase [Generation not implemented]

1.4. General
------------
Silverlight and asynchronous methods code generation (Encapsulated Implementation only) 
Generate Unit of Work pattern (Creator and Getter only) 
Solution was migrated to VS2010 but a VS2008 solution file will be kept for now.


2. Corrections
==============

2.1. Internal
-------------
Generation setting Suffix for base files was handled incorrectly when set to ".Designer"

2.2. Templates
--------------
The generation of a useless "IsReadOnly = true" was removed. 
On editable collections, the Add method with item parameter, was using CanGetObject instead of CanAddObject 
Method documentation was improved, namely missing parameter documentation 
CSLA35-VB Correction - transaction commit on DataPortal update and insert methods

2.3. User Interface
-------------------
ORB updates PropertyGrid as soon as LoadingScheme changes

2.4. General
------------
SelfLoad child of root versus child of non root objects issue


2011-05-19
