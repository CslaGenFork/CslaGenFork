<%@ CodeTemplate Inherits="CslaTemplateHelperCS" Language="CSharp" TargetLanguage="CSharp" Description="Generates a CSLA ReadOnly Collection." %>
<%@ Property Name="Info" Type="CslaObjectInfo" Optional="false" Category="Business Object" Description="Definition of the ReadOnlyCollection Object to create." %>
<%@ Property Name="Errors" Type="System.Text.StringBuilder" Optional="false" Category="Options" Description="Allows the template to return errors to master.cst" %>
<%@ Property Name="Warnings" Type="System.Text.StringBuilder" Optional="false" Category="Options" Description="Allows the template to return warnings to master.cst" %>

<%@ Assembly Name="CslaGenerator" %>
<%@ Import Namespace="CslaGenerator" %>
<%@ Import Namespace="CslaGenerator.Metadata" %>
<%@ Import Namespace="CslaGenerator.CodeGen" %>
<%@ Import Namespace="CslaGenerator.Util" %>
<%@ Import Namespace="System.Text" %>
<%@ Import Namespace="System.Collections.Generic" %>

<!-- #include file="ReadOnlyCollection_Validate.asp" -->
<%
if (Errors.Length == 0)
{
    int silverlightLevel = 0;
    bool genOptional = false;
    bool first = true;
    %><!-- #include file="Header.asp" -->
<!-- #include file="Using.asp" -->
<%
    if (Info.ObjectNamespace.Length > 0)
    {
        %>namespace <%= Info.ObjectNamespace %>
{
<%
    }
    bool? firstComment = null;
    %><!-- #include file="XmlComment.asp" -->
    <%
    if (GetAttributesString(Info.Attributes) != string.Empty)
    {
        %>
    <%= GetAttributesString(Info.Attributes) %>
    <%
    }
    %>
    [Serializable]
<%
    if (CurrentUnit.GenerationParams.DualListInheritance)
    {
        %>#if WINFORMS
    <%
    }
    %><%= CurrentUnit.GenerationParams.DualListInheritance ? "" : "    " %>public partial class <%= Info.ObjectName %> : <%
    if (Info.InheritedType.Type != String.Empty)
    {
        %><%=Info.InheritedType.Type%><%
    }
    else if (Info.InheritedType.ObjectName != String.Empty)
    {
        %><%=Info.InheritedType.ObjectName%><%
    }
    else
    {
        %><%= ListBaseHelper("ReadOnly", true) %><%
    }
    %><<%= Info.ObjectName %>, <%= Info.ItemType %>><!-- #include file="Implements.asp" -->
<%
    if (CurrentUnit.GenerationParams.DualListInheritance)
    {
        %>#else
    <%= CurrentUnit.GenerationParams.DualListInheritance ? "" : "    " %>public partial class <%= Info.ObjectName %> : <%
        if (Info.InheritedType.Type != String.Empty)
        {
            %><%=Info.InheritedType.Type%><%
        }
        else if (Info.InheritedType.ObjectName != String.Empty)
        {
            %><%=Info.InheritedType.ObjectName%><%
        }
        else
        {
            %><%= ListBaseHelper("ReadOnly", false) %><%
        }
        %><<%= Info.ObjectName %>, <%= Info.ItemType %>><!-- #include file="Implements.asp" -->
#endif
    <%
    }
    %><%= CurrentUnit.GenerationParams.DualListInheritance ? "" : "    " %>{
<!-- #include file="CollectionBusinessProps.asp" -->
<!-- #include file="FindMethods.asp" -->
    <%
    if (Info.SimpleCacheOptions != SimpleCacheResults.None)
    {
        %>
<!-- #include file="SimpleCacheFactory.asp" -->
        <%
    }
    if (Info.GenerateFactoryMethods)
    {
        if (Info.DbName.Equals(String.Empty))
        {
            Warnings.Append("Make sure you specify a DB name." + Environment.NewLine);
        }
        %>

<!-- #include file="ReadOnlyCollection_Factory.asp" -->
        <%
    }
    %>
<!-- #include file="Constructor.asp" -->
<!-- #include file="Criteria.asp" -->
<!-- #include file="SharedAuthorizationMethods.asp" -->
<!-- #include file="SavedHandler.asp" -->
<%
    if (Info.GenerateDataAccessRegion)
    {
        if (!genOptional)
        {
            Response.Write(Environment.NewLine);
        }
        %>
<!-- #include file="ReadOnlyCollection_DataPortal.asp" -->
<!-- #include file="Events.asp" -->

<%
    }
    %>

    }
    <%
    if (Info.ObjectNamespace.Length > 0)
    {
        %>
}
<%
    }
}
%>
