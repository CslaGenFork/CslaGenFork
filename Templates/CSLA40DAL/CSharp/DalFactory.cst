<%@ CodeTemplate Inherits="CslaTemplateHelperCS" Language="CSharp" TargetLanguage="CSharp" Description="Generates a static Database class." %>
<%@ Property Name="Info" Type="CslaObjectInfo" Optional="false" Category="Business Object" Description="Definition of the CSLA Object (just to get some project info)" %>
<%@ Property Name="Errors" Type="System.Text.StringBuilder" Optional="false" Category="Options" Description="Allows the template to return errors to master.cst" %>
<%@ Property Name="Warnings" Type="System.Text.StringBuilder" Optional="false" Category="Options" Description="Allows the template to return warnings to master.cst" %>

<%@ Assembly Name="CslaGenerator" %>
<%@ Import Namespace="CslaGenerator" %>
<%@ Import Namespace="CslaGenerator.Metadata" %>
<%@ Import Namespace="CslaGenerator.CodeGen" %>
<%@ Import Namespace="CslaGenerator.Util" %>

//-----------------------------------------------------------------------
// <copyright file="DalFactory<%= GetConnectionName(CurrentUnit) %>.cs" company="Marimer LLC">
//     Copyright (c) Marimer LLC. All rights reserved.
//     Website: http://www.lhotka.net/cslanet/
// </copyright>
//-----------------------------------------------------------------------

using System;
using System.Configuration;

namespace <%= GetContextUtilitiesNamespace(CurrentUnit, GenerationStep.DalInterface) %>
{
    /// <summary>
    /// Creates a <%= GetConnectionName(CurrentUnit) %> DAL manager provider.
    /// </summary>
    /// <remarks>
    /// To use the generated DAL:<br/>
    /// 1) name this assembly <%= CurrentUnit.GenerationParams.DalInterfaceNamespace %><br/>
    /// 2) add the following line to the <strong>appSettings</strong>
    /// section of the application .config file: <br/>
    /// &lt;add key="<%= GetConnectionName(CurrentUnit) %>.DalManagerType" value="<%= GetContextUtilitiesNamespace(CurrentUnit, GenerationStep.DalObject) %>.DalManager<%= GetConnectionName(CurrentUnit) %>, <%= CurrentUnit.GenerationParams.DalObjectNamespace %>" /&gt;
    /// </remarks>
    public static class DalFactory<%= GetConnectionName(CurrentUnit) %>
    {
        private static Type _dalType;

        /// <summary>Gets the <%= GetConnectionName(CurrentUnit) %> DAL manager type that must be set
        /// in the <strong>appSettings</strong> section of the application .config file.</summary>
        /// <returns>A new <see cref="IDalManager<%= GetConnectionName(CurrentUnit) %>"/> instance</returns>
        public static IDalManager<%= GetConnectionName(CurrentUnit) %> GetManager()
        {
            if (_dalType == null)
            {
                string dalTypeName = ConfigurationManager.AppSettings["<%= GetConnectionName(CurrentUnit) %>.DalManagerType"];
                if (!string.IsNullOrEmpty(dalTypeName))
                    _dalType = Type.GetType(dalTypeName);
                else
                    throw new NullReferenceException("<%= GetConnectionName(CurrentUnit) %>.DalManagerType");
                if (_dalType == null)
                    throw new ArgumentException(string.Format("Type {0} could not be found", dalTypeName));
            }
            return (IDalManager<%= GetConnectionName(CurrentUnit) %>) Activator.CreateInstance(_dalType);
        }
    }
}
