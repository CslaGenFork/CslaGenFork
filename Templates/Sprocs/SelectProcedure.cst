<%@ CodeTemplate Inherits="SprocTemplateHelper" Language="C#" TargetLanguage="T-SQL" Description="Generates a Select stored procedure." %>

<%@ Assembly Name="DBSchemaInfo" %>
<%@ Import Namespace="DBSchemaInfo.Base" %>
<%@ Assembly Name="CslaGenerator" %>
<%@ Import Namespace="CslaGenerator.Metadata" %>
<%@ Import Namespace="CslaGenerator.CodeGen" %>
<%@ Import Namespace="CslaGenerator.Util" %>
<%@ Assembly Name="System.Data"%>
<%@ Import Namespace="System.Collections" %>
<%@ Import Namespace="System.Collections.Generic" %>
<%@ Import Namespace="System.Data" %>
<%@ Import Namespace="System.Text" %>
<%@ Assembly Name="System.Windows.Forms"%>
<%@ Import Namespace="System.Windows.Forms"%>

<%
Init(Info);
int propCount = 0;
bool first = false;
bool collType = IsCollectionType(Info.ObjectType);
bool searchWhereClause = collType;
List<IResultObject> tables = GetTablesSelect(Info);
SortTables(tables);
string plainTableSchema = tables[0].ObjectSchema + ".";
string fullTableSchema = "[" + tables[0].ObjectSchema + "].";
%>
/****** Object:  StoredProcedure <%= fullTableSchema %>[<%= Criteria.GetOptions.ProcedureName %>]    Script Date: <%= DateTime.Now %> ******/
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'<%= fullTableSchema %>[<%= Criteria.GetOptions.ProcedureName %>]') AND type in (N'P', N'PC'))
    DROP PROCEDURE <%= fullTableSchema %>[<%= Criteria.GetOptions.ProcedureName %>]
GO

CREATE PROCEDURE <%= fullTableSchema %>[<%= Criteria.GetOptions.ProcedureName %>]<%
first = true;
foreach (CriteriaProperty parm in Criteria.Properties)
{
    propCount++;
    if (!first) { %>,<% } else { first = false; }
    %>
    @<%= parm.ParameterName %> <%= GetDataTypeString(parm) %><%= (collType && parm.Nullable) ? " = NULL" : "" %><%
}
%>
AS
    BEGIN

        SET NOCOUNT ON
    <%
if (collType && propCount > 0)
{
    %>

        /* Search Variables */
    <%
    first = true;
    foreach (Property parm in Criteria.Properties)
    {
        ValueProperty prop = GetValuePropertyByName(Info, parm.Name);
        if (prop != null)
        {
            if (IsStringType(prop.DbBindColumn.DataType))
            {
                if (prop.DbBindColumn.DataType.ToString() == "StringFixedLength")
                {
                    %>
        IF (@<%= parm.Name %> <> '')
            SET @<%= parm.Name %> = RTRIM(@<%= parm.Name %>) + '%'
        ELSE
            SET @<%= parm.Name %> = '%'
<%
                }
                else
                {
                    %>
        IF (@<%= parm.Name %> <> '')
            SET @<%= parm.Name %> = @<%= parm.Name %> + '%'
        ELSE
            SET @<%= parm.Name %> = '%'
<%
                }
            }
        }
    }
}

//Root Objects
string getSelect = GetSelect(Info, Criteria, false, searchWhereClause);
if (!string.IsNullOrEmpty(getSelect))
{
    %><%= getSelect %>
<%
}
//Child Objects
string getChildSelect = GetChildSelects(Info, Criteria, searchWhereClause);
if (!string.IsNullOrEmpty(getChildSelect))
{
    %><%= getChildSelect %>
<%
}
if (string.IsNullOrEmpty(getSelect) && string.IsNullOrEmpty(getChildSelect))
{
    Response.Write("\r\n");
}
%>

    END
GO
