//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3620
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace DBSchemaInfo.Base {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DBStructure")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DBStructure : global::System.Data.DataSet {
        
        private INFORMATION_SCHEMA_TABLESDataTable tableINFORMATION_SCHEMA_TABLES;
        
        private INFORMATION_SCHEMA_COLUMNSDataTable tableINFORMATION_SCHEMA_COLUMNS;
        
        private INFORMATION_SCHEMA_ROUTINESDataTable tableINFORMATION_SCHEMA_ROUTINES;
        
        private INFORMATION_SCHEMA_PARAMETERSDataTable tableINFORMATION_SCHEMA_PARAMETERS;
        
        private global::System.Data.DataRelation relationINFORMATION_SCHEMA_ROUTINES_INFORMATION_SCHEMA_PARAMETERS;
        
        private global::System.Data.DataRelation relationINFORMATION_SCHEMA_TABLES_INFORMATION_SCHEMA_COLUMNS;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DBStructure() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DBStructure(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["INFORMATION_SCHEMA_TABLES"] != null)) {
                    base.Tables.Add(new INFORMATION_SCHEMA_TABLESDataTable(ds.Tables["INFORMATION_SCHEMA_TABLES"]));
                }
                if ((ds.Tables["INFORMATION_SCHEMA_COLUMNS"] != null)) {
                    base.Tables.Add(new INFORMATION_SCHEMA_COLUMNSDataTable(ds.Tables["INFORMATION_SCHEMA_COLUMNS"]));
                }
                if ((ds.Tables["INFORMATION_SCHEMA_ROUTINES"] != null)) {
                    base.Tables.Add(new INFORMATION_SCHEMA_ROUTINESDataTable(ds.Tables["INFORMATION_SCHEMA_ROUTINES"]));
                }
                if ((ds.Tables["INFORMATION_SCHEMA_PARAMETERS"] != null)) {
                    base.Tables.Add(new INFORMATION_SCHEMA_PARAMETERSDataTable(ds.Tables["INFORMATION_SCHEMA_PARAMETERS"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public INFORMATION_SCHEMA_TABLESDataTable INFORMATION_SCHEMA_TABLES {
            get {
                return this.tableINFORMATION_SCHEMA_TABLES;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public INFORMATION_SCHEMA_COLUMNSDataTable INFORMATION_SCHEMA_COLUMNS {
            get {
                return this.tableINFORMATION_SCHEMA_COLUMNS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public INFORMATION_SCHEMA_ROUTINESDataTable INFORMATION_SCHEMA_ROUTINES {
            get {
                return this.tableINFORMATION_SCHEMA_ROUTINES;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public INFORMATION_SCHEMA_PARAMETERSDataTable INFORMATION_SCHEMA_PARAMETERS {
            get {
                return this.tableINFORMATION_SCHEMA_PARAMETERS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DBStructure cln = ((DBStructure)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["INFORMATION_SCHEMA_TABLES"] != null)) {
                    base.Tables.Add(new INFORMATION_SCHEMA_TABLESDataTable(ds.Tables["INFORMATION_SCHEMA_TABLES"]));
                }
                if ((ds.Tables["INFORMATION_SCHEMA_COLUMNS"] != null)) {
                    base.Tables.Add(new INFORMATION_SCHEMA_COLUMNSDataTable(ds.Tables["INFORMATION_SCHEMA_COLUMNS"]));
                }
                if ((ds.Tables["INFORMATION_SCHEMA_ROUTINES"] != null)) {
                    base.Tables.Add(new INFORMATION_SCHEMA_ROUTINESDataTable(ds.Tables["INFORMATION_SCHEMA_ROUTINES"]));
                }
                if ((ds.Tables["INFORMATION_SCHEMA_PARAMETERS"] != null)) {
                    base.Tables.Add(new INFORMATION_SCHEMA_PARAMETERSDataTable(ds.Tables["INFORMATION_SCHEMA_PARAMETERS"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableINFORMATION_SCHEMA_TABLES = ((INFORMATION_SCHEMA_TABLESDataTable)(base.Tables["INFORMATION_SCHEMA_TABLES"]));
            if ((initTable == true)) {
                if ((this.tableINFORMATION_SCHEMA_TABLES != null)) {
                    this.tableINFORMATION_SCHEMA_TABLES.InitVars();
                }
            }
            this.tableINFORMATION_SCHEMA_COLUMNS = ((INFORMATION_SCHEMA_COLUMNSDataTable)(base.Tables["INFORMATION_SCHEMA_COLUMNS"]));
            if ((initTable == true)) {
                if ((this.tableINFORMATION_SCHEMA_COLUMNS != null)) {
                    this.tableINFORMATION_SCHEMA_COLUMNS.InitVars();
                }
            }
            this.tableINFORMATION_SCHEMA_ROUTINES = ((INFORMATION_SCHEMA_ROUTINESDataTable)(base.Tables["INFORMATION_SCHEMA_ROUTINES"]));
            if ((initTable == true)) {
                if ((this.tableINFORMATION_SCHEMA_ROUTINES != null)) {
                    this.tableINFORMATION_SCHEMA_ROUTINES.InitVars();
                }
            }
            this.tableINFORMATION_SCHEMA_PARAMETERS = ((INFORMATION_SCHEMA_PARAMETERSDataTable)(base.Tables["INFORMATION_SCHEMA_PARAMETERS"]));
            if ((initTable == true)) {
                if ((this.tableINFORMATION_SCHEMA_PARAMETERS != null)) {
                    this.tableINFORMATION_SCHEMA_PARAMETERS.InitVars();
                }
            }
            this.relationINFORMATION_SCHEMA_ROUTINES_INFORMATION_SCHEMA_PARAMETERS = this.Relations["INFORMATION_SCHEMA_ROUTINES_INFORMATION_SCHEMA_PARAMETERS"];
            this.relationINFORMATION_SCHEMA_TABLES_INFORMATION_SCHEMA_COLUMNS = this.Relations["INFORMATION_SCHEMA_TABLES_INFORMATION_SCHEMA_COLUMNS"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DBStructure";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DBStructure.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableINFORMATION_SCHEMA_TABLES = new INFORMATION_SCHEMA_TABLESDataTable();
            base.Tables.Add(this.tableINFORMATION_SCHEMA_TABLES);
            this.tableINFORMATION_SCHEMA_COLUMNS = new INFORMATION_SCHEMA_COLUMNSDataTable();
            base.Tables.Add(this.tableINFORMATION_SCHEMA_COLUMNS);
            this.tableINFORMATION_SCHEMA_ROUTINES = new INFORMATION_SCHEMA_ROUTINESDataTable();
            base.Tables.Add(this.tableINFORMATION_SCHEMA_ROUTINES);
            this.tableINFORMATION_SCHEMA_PARAMETERS = new INFORMATION_SCHEMA_PARAMETERSDataTable();
            base.Tables.Add(this.tableINFORMATION_SCHEMA_PARAMETERS);
            this.relationINFORMATION_SCHEMA_ROUTINES_INFORMATION_SCHEMA_PARAMETERS = new global::System.Data.DataRelation("INFORMATION_SCHEMA_ROUTINES_INFORMATION_SCHEMA_PARAMETERS", new global::System.Data.DataColumn[] {
                        this.tableINFORMATION_SCHEMA_ROUTINES.SPECIFIC_CATALOGColumn,
                        this.tableINFORMATION_SCHEMA_ROUTINES.SPECIFIC_SCHEMAColumn,
                        this.tableINFORMATION_SCHEMA_ROUTINES.SPECIFIC_NAMEColumn}, new global::System.Data.DataColumn[] {
                        this.tableINFORMATION_SCHEMA_PARAMETERS.SPECIFIC_CATALOGColumn,
                        this.tableINFORMATION_SCHEMA_PARAMETERS.SPECIFIC_SCHEMAColumn,
                        this.tableINFORMATION_SCHEMA_PARAMETERS.SPECIFIC_NAMEColumn}, false);
            this.Relations.Add(this.relationINFORMATION_SCHEMA_ROUTINES_INFORMATION_SCHEMA_PARAMETERS);
            this.relationINFORMATION_SCHEMA_TABLES_INFORMATION_SCHEMA_COLUMNS = new global::System.Data.DataRelation("INFORMATION_SCHEMA_TABLES_INFORMATION_SCHEMA_COLUMNS", new global::System.Data.DataColumn[] {
                        this.tableINFORMATION_SCHEMA_TABLES.TABLE_CATALOGColumn,
                        this.tableINFORMATION_SCHEMA_TABLES.TABLE_SCHEMAColumn,
                        this.tableINFORMATION_SCHEMA_TABLES.TABLE_NAMEColumn}, new global::System.Data.DataColumn[] {
                        this.tableINFORMATION_SCHEMA_COLUMNS.TABLE_CATALOGColumn,
                        this.tableINFORMATION_SCHEMA_COLUMNS.TABLE_SCHEMAColumn,
                        this.tableINFORMATION_SCHEMA_COLUMNS.TABLE_NAMEColumn}, false);
            this.Relations.Add(this.relationINFORMATION_SCHEMA_TABLES_INFORMATION_SCHEMA_COLUMNS);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeINFORMATION_SCHEMA_TABLES() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeINFORMATION_SCHEMA_COLUMNS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeINFORMATION_SCHEMA_ROUTINES() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeINFORMATION_SCHEMA_PARAMETERS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DBStructure ds = new DBStructure();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void INFORMATION_SCHEMA_TABLESRowChangeEventHandler(object sender, INFORMATION_SCHEMA_TABLESRowChangeEvent e);
        
        public delegate void INFORMATION_SCHEMA_COLUMNSRowChangeEventHandler(object sender, INFORMATION_SCHEMA_COLUMNSRowChangeEvent e);
        
        public delegate void INFORMATION_SCHEMA_ROUTINESRowChangeEventHandler(object sender, INFORMATION_SCHEMA_ROUTINESRowChangeEvent e);
        
        public delegate void INFORMATION_SCHEMA_PARAMETERSRowChangeEventHandler(object sender, INFORMATION_SCHEMA_PARAMETERSRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class INFORMATION_SCHEMA_TABLESDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnTABLE_CATALOG;
            
            private global::System.Data.DataColumn columnTABLE_SCHEMA;
            
            private global::System.Data.DataColumn columnTABLE_NAME;
            
            private global::System.Data.DataColumn columnTABLE_TYPE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public INFORMATION_SCHEMA_TABLESDataTable() {
                this.TableName = "INFORMATION_SCHEMA_TABLES";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal INFORMATION_SCHEMA_TABLESDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected INFORMATION_SCHEMA_TABLESDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TABLE_CATALOGColumn {
                get {
                    return this.columnTABLE_CATALOG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TABLE_SCHEMAColumn {
                get {
                    return this.columnTABLE_SCHEMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TABLE_NAMEColumn {
                get {
                    return this.columnTABLE_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TABLE_TYPEColumn {
                get {
                    return this.columnTABLE_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public INFORMATION_SCHEMA_TABLESRow this[int index] {
                get {
                    return ((INFORMATION_SCHEMA_TABLESRow)(this.Rows[index]));
                }
            }
            
            public event INFORMATION_SCHEMA_TABLESRowChangeEventHandler INFORMATION_SCHEMA_TABLESRowChanging;
            
            public event INFORMATION_SCHEMA_TABLESRowChangeEventHandler INFORMATION_SCHEMA_TABLESRowChanged;
            
            public event INFORMATION_SCHEMA_TABLESRowChangeEventHandler INFORMATION_SCHEMA_TABLESRowDeleting;
            
            public event INFORMATION_SCHEMA_TABLESRowChangeEventHandler INFORMATION_SCHEMA_TABLESRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddINFORMATION_SCHEMA_TABLESRow(INFORMATION_SCHEMA_TABLESRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public INFORMATION_SCHEMA_TABLESRow AddINFORMATION_SCHEMA_TABLESRow(string TABLE_CATALOG, string TABLE_SCHEMA, string TABLE_NAME, string TABLE_TYPE) {
                INFORMATION_SCHEMA_TABLESRow rowINFORMATION_SCHEMA_TABLESRow = ((INFORMATION_SCHEMA_TABLESRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TABLE_CATALOG,
                        TABLE_SCHEMA,
                        TABLE_NAME,
                        TABLE_TYPE};
                rowINFORMATION_SCHEMA_TABLESRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowINFORMATION_SCHEMA_TABLESRow);
                return rowINFORMATION_SCHEMA_TABLESRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public INFORMATION_SCHEMA_TABLESRow FindByTABLE_CATALOGTABLE_SCHEMATABLE_NAME(string TABLE_CATALOG, string TABLE_SCHEMA, string TABLE_NAME) {
                return ((INFORMATION_SCHEMA_TABLESRow)(this.Rows.Find(new object[] {
                            TABLE_CATALOG,
                            TABLE_SCHEMA,
                            TABLE_NAME})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                INFORMATION_SCHEMA_TABLESDataTable cln = ((INFORMATION_SCHEMA_TABLESDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new INFORMATION_SCHEMA_TABLESDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTABLE_CATALOG = base.Columns["TABLE_CATALOG"];
                this.columnTABLE_SCHEMA = base.Columns["TABLE_SCHEMA"];
                this.columnTABLE_NAME = base.Columns["TABLE_NAME"];
                this.columnTABLE_TYPE = base.Columns["TABLE_TYPE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTABLE_CATALOG = new global::System.Data.DataColumn("TABLE_CATALOG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTABLE_CATALOG);
                this.columnTABLE_SCHEMA = new global::System.Data.DataColumn("TABLE_SCHEMA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTABLE_SCHEMA);
                this.columnTABLE_NAME = new global::System.Data.DataColumn("TABLE_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTABLE_NAME);
                this.columnTABLE_TYPE = new global::System.Data.DataColumn("TABLE_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTABLE_TYPE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("INFORMATION_SCHEMA_TABLESKey1", new global::System.Data.DataColumn[] {
                                this.columnTABLE_CATALOG,
                                this.columnTABLE_SCHEMA,
                                this.columnTABLE_NAME}, true));
                this.columnTABLE_CATALOG.AllowDBNull = false;
                this.columnTABLE_CATALOG.ReadOnly = true;
                this.columnTABLE_CATALOG.MaxLength = 128;
                this.columnTABLE_SCHEMA.AllowDBNull = false;
                this.columnTABLE_SCHEMA.MaxLength = 128;
                this.columnTABLE_NAME.AllowDBNull = false;
                this.columnTABLE_NAME.MaxLength = 128;
                this.columnTABLE_TYPE.ReadOnly = true;
                this.columnTABLE_TYPE.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public INFORMATION_SCHEMA_TABLESRow NewINFORMATION_SCHEMA_TABLESRow() {
                return ((INFORMATION_SCHEMA_TABLESRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new INFORMATION_SCHEMA_TABLESRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(INFORMATION_SCHEMA_TABLESRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.INFORMATION_SCHEMA_TABLESRowChanged != null)) {
                    this.INFORMATION_SCHEMA_TABLESRowChanged(this, new INFORMATION_SCHEMA_TABLESRowChangeEvent(((INFORMATION_SCHEMA_TABLESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.INFORMATION_SCHEMA_TABLESRowChanging != null)) {
                    this.INFORMATION_SCHEMA_TABLESRowChanging(this, new INFORMATION_SCHEMA_TABLESRowChangeEvent(((INFORMATION_SCHEMA_TABLESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.INFORMATION_SCHEMA_TABLESRowDeleted != null)) {
                    this.INFORMATION_SCHEMA_TABLESRowDeleted(this, new INFORMATION_SCHEMA_TABLESRowChangeEvent(((INFORMATION_SCHEMA_TABLESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.INFORMATION_SCHEMA_TABLESRowDeleting != null)) {
                    this.INFORMATION_SCHEMA_TABLESRowDeleting(this, new INFORMATION_SCHEMA_TABLESRowChangeEvent(((INFORMATION_SCHEMA_TABLESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveINFORMATION_SCHEMA_TABLESRow(INFORMATION_SCHEMA_TABLESRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DBStructure ds = new DBStructure();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "INFORMATION_SCHEMA_TABLESDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class INFORMATION_SCHEMA_COLUMNSDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnTABLE_CATALOG;
            
            private global::System.Data.DataColumn columnTABLE_SCHEMA;
            
            private global::System.Data.DataColumn columnTABLE_NAME;
            
            private global::System.Data.DataColumn columnCOLUMN_NAME;
            
            private global::System.Data.DataColumn columnORDINAL_POSITION;
            
            private global::System.Data.DataColumn columnCOLUMN_DEFAULT;
            
            private global::System.Data.DataColumn columnIS_NULLABLE;
            
            private global::System.Data.DataColumn columnDATA_TYPE;
            
            private global::System.Data.DataColumn columnCHARACTER_MAXIMUM_LENGTH;
            
            private global::System.Data.DataColumn columnCHARACTER_OCTET_LENGTH;
            
            private global::System.Data.DataColumn columnNUMERIC_PRECISION;
            
            private global::System.Data.DataColumn columnNUMERIC_PRECISION_RADIX;
            
            private global::System.Data.DataColumn columnNUMERIC_SCALE;
            
            private global::System.Data.DataColumn columnDATETIME_PRECISION;
            
            private global::System.Data.DataColumn columnCHARACTER_SET_CATALOG;
            
            private global::System.Data.DataColumn columnCHARACTER_SET_SCHEMA;
            
            private global::System.Data.DataColumn columnCHARACTER_SET_NAME;
            
            private global::System.Data.DataColumn columnCOLLATION_CATALOG;
            
            private global::System.Data.DataColumn columnCOLLATION_SCHEMA;
            
            private global::System.Data.DataColumn columnCOLLATION_NAME;
            
            private global::System.Data.DataColumn columnDOMAIN_CATALOG;
            
            private global::System.Data.DataColumn columnDOMAIN_SCHEMA;
            
            private global::System.Data.DataColumn columnDOMAIN_NAME;
            
            private global::System.Data.DataColumn columnIS_PRIMARY_KEY;
            
            private global::System.Data.DataColumn columnIS_IDENTITY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public INFORMATION_SCHEMA_COLUMNSDataTable() {
                this.TableName = "INFORMATION_SCHEMA_COLUMNS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal INFORMATION_SCHEMA_COLUMNSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected INFORMATION_SCHEMA_COLUMNSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TABLE_CATALOGColumn {
                get {
                    return this.columnTABLE_CATALOG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TABLE_SCHEMAColumn {
                get {
                    return this.columnTABLE_SCHEMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TABLE_NAMEColumn {
                get {
                    return this.columnTABLE_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COLUMN_NAMEColumn {
                get {
                    return this.columnCOLUMN_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ORDINAL_POSITIONColumn {
                get {
                    return this.columnORDINAL_POSITION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COLUMN_DEFAULTColumn {
                get {
                    return this.columnCOLUMN_DEFAULT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IS_NULLABLEColumn {
                get {
                    return this.columnIS_NULLABLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DATA_TYPEColumn {
                get {
                    return this.columnDATA_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CHARACTER_MAXIMUM_LENGTHColumn {
                get {
                    return this.columnCHARACTER_MAXIMUM_LENGTH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CHARACTER_OCTET_LENGTHColumn {
                get {
                    return this.columnCHARACTER_OCTET_LENGTH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NUMERIC_PRECISIONColumn {
                get {
                    return this.columnNUMERIC_PRECISION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NUMERIC_PRECISION_RADIXColumn {
                get {
                    return this.columnNUMERIC_PRECISION_RADIX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NUMERIC_SCALEColumn {
                get {
                    return this.columnNUMERIC_SCALE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DATETIME_PRECISIONColumn {
                get {
                    return this.columnDATETIME_PRECISION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CHARACTER_SET_CATALOGColumn {
                get {
                    return this.columnCHARACTER_SET_CATALOG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CHARACTER_SET_SCHEMAColumn {
                get {
                    return this.columnCHARACTER_SET_SCHEMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CHARACTER_SET_NAMEColumn {
                get {
                    return this.columnCHARACTER_SET_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COLLATION_CATALOGColumn {
                get {
                    return this.columnCOLLATION_CATALOG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COLLATION_SCHEMAColumn {
                get {
                    return this.columnCOLLATION_SCHEMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COLLATION_NAMEColumn {
                get {
                    return this.columnCOLLATION_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DOMAIN_CATALOGColumn {
                get {
                    return this.columnDOMAIN_CATALOG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DOMAIN_SCHEMAColumn {
                get {
                    return this.columnDOMAIN_SCHEMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DOMAIN_NAMEColumn {
                get {
                    return this.columnDOMAIN_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IS_PRIMARY_KEYColumn {
                get {
                    return this.columnIS_PRIMARY_KEY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IS_IDENTITYColumn {
                get {
                    return this.columnIS_IDENTITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public INFORMATION_SCHEMA_COLUMNSRow this[int index] {
                get {
                    return ((INFORMATION_SCHEMA_COLUMNSRow)(this.Rows[index]));
                }
            }
            
            public event INFORMATION_SCHEMA_COLUMNSRowChangeEventHandler INFORMATION_SCHEMA_COLUMNSRowChanging;
            
            public event INFORMATION_SCHEMA_COLUMNSRowChangeEventHandler INFORMATION_SCHEMA_COLUMNSRowChanged;
            
            public event INFORMATION_SCHEMA_COLUMNSRowChangeEventHandler INFORMATION_SCHEMA_COLUMNSRowDeleting;
            
            public event INFORMATION_SCHEMA_COLUMNSRowChangeEventHandler INFORMATION_SCHEMA_COLUMNSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddINFORMATION_SCHEMA_COLUMNSRow(INFORMATION_SCHEMA_COLUMNSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public INFORMATION_SCHEMA_COLUMNSRow AddINFORMATION_SCHEMA_COLUMNSRow(
                        string TABLE_CATALOG, 
                        string TABLE_SCHEMA, 
                        string TABLE_NAME, 
                        string COLUMN_NAME, 
                        int ORDINAL_POSITION, 
                        string COLUMN_DEFAULT, 
                        string IS_NULLABLE, 
                        string DATA_TYPE, 
                        int CHARACTER_MAXIMUM_LENGTH, 
                        int CHARACTER_OCTET_LENGTH, 
                        byte NUMERIC_PRECISION, 
                        short NUMERIC_PRECISION_RADIX, 
                        int NUMERIC_SCALE, 
                        short DATETIME_PRECISION, 
                        string CHARACTER_SET_CATALOG, 
                        string CHARACTER_SET_SCHEMA, 
                        string CHARACTER_SET_NAME, 
                        string COLLATION_CATALOG, 
                        string COLLATION_SCHEMA, 
                        string COLLATION_NAME, 
                        string DOMAIN_CATALOG, 
                        string DOMAIN_SCHEMA, 
                        string DOMAIN_NAME, 
                        int IS_PRIMARY_KEY, 
                        int IS_IDENTITY) {
                INFORMATION_SCHEMA_COLUMNSRow rowINFORMATION_SCHEMA_COLUMNSRow = ((INFORMATION_SCHEMA_COLUMNSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TABLE_CATALOG,
                        TABLE_SCHEMA,
                        TABLE_NAME,
                        COLUMN_NAME,
                        ORDINAL_POSITION,
                        COLUMN_DEFAULT,
                        IS_NULLABLE,
                        DATA_TYPE,
                        CHARACTER_MAXIMUM_LENGTH,
                        CHARACTER_OCTET_LENGTH,
                        NUMERIC_PRECISION,
                        NUMERIC_PRECISION_RADIX,
                        NUMERIC_SCALE,
                        DATETIME_PRECISION,
                        CHARACTER_SET_CATALOG,
                        CHARACTER_SET_SCHEMA,
                        CHARACTER_SET_NAME,
                        COLLATION_CATALOG,
                        COLLATION_SCHEMA,
                        COLLATION_NAME,
                        DOMAIN_CATALOG,
                        DOMAIN_SCHEMA,
                        DOMAIN_NAME,
                        IS_PRIMARY_KEY,
                        IS_IDENTITY};
                rowINFORMATION_SCHEMA_COLUMNSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowINFORMATION_SCHEMA_COLUMNSRow);
                return rowINFORMATION_SCHEMA_COLUMNSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                INFORMATION_SCHEMA_COLUMNSDataTable cln = ((INFORMATION_SCHEMA_COLUMNSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new INFORMATION_SCHEMA_COLUMNSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTABLE_CATALOG = base.Columns["TABLE_CATALOG"];
                this.columnTABLE_SCHEMA = base.Columns["TABLE_SCHEMA"];
                this.columnTABLE_NAME = base.Columns["TABLE_NAME"];
                this.columnCOLUMN_NAME = base.Columns["COLUMN_NAME"];
                this.columnORDINAL_POSITION = base.Columns["ORDINAL_POSITION"];
                this.columnCOLUMN_DEFAULT = base.Columns["COLUMN_DEFAULT"];
                this.columnIS_NULLABLE = base.Columns["IS_NULLABLE"];
                this.columnDATA_TYPE = base.Columns["DATA_TYPE"];
                this.columnCHARACTER_MAXIMUM_LENGTH = base.Columns["CHARACTER_MAXIMUM_LENGTH"];
                this.columnCHARACTER_OCTET_LENGTH = base.Columns["CHARACTER_OCTET_LENGTH"];
                this.columnNUMERIC_PRECISION = base.Columns["NUMERIC_PRECISION"];
                this.columnNUMERIC_PRECISION_RADIX = base.Columns["NUMERIC_PRECISION_RADIX"];
                this.columnNUMERIC_SCALE = base.Columns["NUMERIC_SCALE"];
                this.columnDATETIME_PRECISION = base.Columns["DATETIME_PRECISION"];
                this.columnCHARACTER_SET_CATALOG = base.Columns["CHARACTER_SET_CATALOG"];
                this.columnCHARACTER_SET_SCHEMA = base.Columns["CHARACTER_SET_SCHEMA"];
                this.columnCHARACTER_SET_NAME = base.Columns["CHARACTER_SET_NAME"];
                this.columnCOLLATION_CATALOG = base.Columns["COLLATION_CATALOG"];
                this.columnCOLLATION_SCHEMA = base.Columns["COLLATION_SCHEMA"];
                this.columnCOLLATION_NAME = base.Columns["COLLATION_NAME"];
                this.columnDOMAIN_CATALOG = base.Columns["DOMAIN_CATALOG"];
                this.columnDOMAIN_SCHEMA = base.Columns["DOMAIN_SCHEMA"];
                this.columnDOMAIN_NAME = base.Columns["DOMAIN_NAME"];
                this.columnIS_PRIMARY_KEY = base.Columns["IS_PRIMARY_KEY"];
                this.columnIS_IDENTITY = base.Columns["IS_IDENTITY"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTABLE_CATALOG = new global::System.Data.DataColumn("TABLE_CATALOG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTABLE_CATALOG);
                this.columnTABLE_SCHEMA = new global::System.Data.DataColumn("TABLE_SCHEMA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTABLE_SCHEMA);
                this.columnTABLE_NAME = new global::System.Data.DataColumn("TABLE_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTABLE_NAME);
                this.columnCOLUMN_NAME = new global::System.Data.DataColumn("COLUMN_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOLUMN_NAME);
                this.columnORDINAL_POSITION = new global::System.Data.DataColumn("ORDINAL_POSITION", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDINAL_POSITION);
                this.columnCOLUMN_DEFAULT = new global::System.Data.DataColumn("COLUMN_DEFAULT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOLUMN_DEFAULT);
                this.columnIS_NULLABLE = new global::System.Data.DataColumn("IS_NULLABLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_NULLABLE);
                this.columnDATA_TYPE = new global::System.Data.DataColumn("DATA_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATA_TYPE);
                this.columnCHARACTER_MAXIMUM_LENGTH = new global::System.Data.DataColumn("CHARACTER_MAXIMUM_LENGTH", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHARACTER_MAXIMUM_LENGTH);
                this.columnCHARACTER_OCTET_LENGTH = new global::System.Data.DataColumn("CHARACTER_OCTET_LENGTH", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHARACTER_OCTET_LENGTH);
                this.columnNUMERIC_PRECISION = new global::System.Data.DataColumn("NUMERIC_PRECISION", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUMERIC_PRECISION);
                this.columnNUMERIC_PRECISION_RADIX = new global::System.Data.DataColumn("NUMERIC_PRECISION_RADIX", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUMERIC_PRECISION_RADIX);
                this.columnNUMERIC_SCALE = new global::System.Data.DataColumn("NUMERIC_SCALE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUMERIC_SCALE);
                this.columnDATETIME_PRECISION = new global::System.Data.DataColumn("DATETIME_PRECISION", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATETIME_PRECISION);
                this.columnCHARACTER_SET_CATALOG = new global::System.Data.DataColumn("CHARACTER_SET_CATALOG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHARACTER_SET_CATALOG);
                this.columnCHARACTER_SET_SCHEMA = new global::System.Data.DataColumn("CHARACTER_SET_SCHEMA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHARACTER_SET_SCHEMA);
                this.columnCHARACTER_SET_NAME = new global::System.Data.DataColumn("CHARACTER_SET_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHARACTER_SET_NAME);
                this.columnCOLLATION_CATALOG = new global::System.Data.DataColumn("COLLATION_CATALOG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOLLATION_CATALOG);
                this.columnCOLLATION_SCHEMA = new global::System.Data.DataColumn("COLLATION_SCHEMA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOLLATION_SCHEMA);
                this.columnCOLLATION_NAME = new global::System.Data.DataColumn("COLLATION_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOLLATION_NAME);
                this.columnDOMAIN_CATALOG = new global::System.Data.DataColumn("DOMAIN_CATALOG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOMAIN_CATALOG);
                this.columnDOMAIN_SCHEMA = new global::System.Data.DataColumn("DOMAIN_SCHEMA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOMAIN_SCHEMA);
                this.columnDOMAIN_NAME = new global::System.Data.DataColumn("DOMAIN_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOMAIN_NAME);
                this.columnIS_PRIMARY_KEY = new global::System.Data.DataColumn("IS_PRIMARY_KEY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_PRIMARY_KEY);
                this.columnIS_IDENTITY = new global::System.Data.DataColumn("IS_IDENTITY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_IDENTITY);
                this.columnTABLE_CATALOG.ReadOnly = true;
                this.columnTABLE_CATALOG.MaxLength = 128;
                this.columnTABLE_SCHEMA.ReadOnly = true;
                this.columnTABLE_SCHEMA.MaxLength = 128;
                this.columnTABLE_NAME.AllowDBNull = false;
                this.columnTABLE_NAME.MaxLength = 128;
                this.columnCOLUMN_NAME.MaxLength = 128;
                this.columnORDINAL_POSITION.ReadOnly = true;
                this.columnCOLUMN_DEFAULT.ReadOnly = true;
                this.columnCOLUMN_DEFAULT.MaxLength = 4000;
                this.columnIS_NULLABLE.ReadOnly = true;
                this.columnIS_NULLABLE.MaxLength = 3;
                this.columnDATA_TYPE.ReadOnly = true;
                this.columnDATA_TYPE.MaxLength = 128;
                this.columnCHARACTER_MAXIMUM_LENGTH.ReadOnly = true;
                this.columnCHARACTER_OCTET_LENGTH.ReadOnly = true;
                this.columnNUMERIC_PRECISION.ReadOnly = true;
                this.columnNUMERIC_PRECISION_RADIX.ReadOnly = true;
                this.columnNUMERIC_SCALE.ReadOnly = true;
                this.columnDATETIME_PRECISION.ReadOnly = true;
                this.columnCHARACTER_SET_CATALOG.ReadOnly = true;
                this.columnCHARACTER_SET_CATALOG.MaxLength = 128;
                this.columnCHARACTER_SET_SCHEMA.ReadOnly = true;
                this.columnCHARACTER_SET_SCHEMA.MaxLength = 128;
                this.columnCHARACTER_SET_NAME.ReadOnly = true;
                this.columnCHARACTER_SET_NAME.MaxLength = 128;
                this.columnCOLLATION_CATALOG.ReadOnly = true;
                this.columnCOLLATION_CATALOG.MaxLength = 128;
                this.columnCOLLATION_SCHEMA.ReadOnly = true;
                this.columnCOLLATION_SCHEMA.MaxLength = 128;
                this.columnCOLLATION_NAME.ReadOnly = true;
                this.columnCOLLATION_NAME.MaxLength = 128;
                this.columnDOMAIN_CATALOG.ReadOnly = true;
                this.columnDOMAIN_CATALOG.MaxLength = 128;
                this.columnDOMAIN_SCHEMA.ReadOnly = true;
                this.columnDOMAIN_SCHEMA.MaxLength = 128;
                this.columnDOMAIN_NAME.ReadOnly = true;
                this.columnDOMAIN_NAME.MaxLength = 128;
                this.columnIS_PRIMARY_KEY.ReadOnly = true;
                this.columnIS_IDENTITY.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public INFORMATION_SCHEMA_COLUMNSRow NewINFORMATION_SCHEMA_COLUMNSRow() {
                return ((INFORMATION_SCHEMA_COLUMNSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new INFORMATION_SCHEMA_COLUMNSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(INFORMATION_SCHEMA_COLUMNSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.INFORMATION_SCHEMA_COLUMNSRowChanged != null)) {
                    this.INFORMATION_SCHEMA_COLUMNSRowChanged(this, new INFORMATION_SCHEMA_COLUMNSRowChangeEvent(((INFORMATION_SCHEMA_COLUMNSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.INFORMATION_SCHEMA_COLUMNSRowChanging != null)) {
                    this.INFORMATION_SCHEMA_COLUMNSRowChanging(this, new INFORMATION_SCHEMA_COLUMNSRowChangeEvent(((INFORMATION_SCHEMA_COLUMNSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.INFORMATION_SCHEMA_COLUMNSRowDeleted != null)) {
                    this.INFORMATION_SCHEMA_COLUMNSRowDeleted(this, new INFORMATION_SCHEMA_COLUMNSRowChangeEvent(((INFORMATION_SCHEMA_COLUMNSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.INFORMATION_SCHEMA_COLUMNSRowDeleting != null)) {
                    this.INFORMATION_SCHEMA_COLUMNSRowDeleting(this, new INFORMATION_SCHEMA_COLUMNSRowChangeEvent(((INFORMATION_SCHEMA_COLUMNSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveINFORMATION_SCHEMA_COLUMNSRow(INFORMATION_SCHEMA_COLUMNSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DBStructure ds = new DBStructure();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "INFORMATION_SCHEMA_COLUMNSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class INFORMATION_SCHEMA_ROUTINESDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSPECIFIC_CATALOG;
            
            private global::System.Data.DataColumn columnSPECIFIC_SCHEMA;
            
            private global::System.Data.DataColumn columnSPECIFIC_NAME;
            
            private global::System.Data.DataColumn columnROUTINE_TYPE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public INFORMATION_SCHEMA_ROUTINESDataTable() {
                this.TableName = "INFORMATION_SCHEMA_ROUTINES";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal INFORMATION_SCHEMA_ROUTINESDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected INFORMATION_SCHEMA_ROUTINESDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SPECIFIC_CATALOGColumn {
                get {
                    return this.columnSPECIFIC_CATALOG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SPECIFIC_SCHEMAColumn {
                get {
                    return this.columnSPECIFIC_SCHEMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SPECIFIC_NAMEColumn {
                get {
                    return this.columnSPECIFIC_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ROUTINE_TYPEColumn {
                get {
                    return this.columnROUTINE_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public INFORMATION_SCHEMA_ROUTINESRow this[int index] {
                get {
                    return ((INFORMATION_SCHEMA_ROUTINESRow)(this.Rows[index]));
                }
            }
            
            public event INFORMATION_SCHEMA_ROUTINESRowChangeEventHandler INFORMATION_SCHEMA_ROUTINESRowChanging;
            
            public event INFORMATION_SCHEMA_ROUTINESRowChangeEventHandler INFORMATION_SCHEMA_ROUTINESRowChanged;
            
            public event INFORMATION_SCHEMA_ROUTINESRowChangeEventHandler INFORMATION_SCHEMA_ROUTINESRowDeleting;
            
            public event INFORMATION_SCHEMA_ROUTINESRowChangeEventHandler INFORMATION_SCHEMA_ROUTINESRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddINFORMATION_SCHEMA_ROUTINESRow(INFORMATION_SCHEMA_ROUTINESRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public INFORMATION_SCHEMA_ROUTINESRow AddINFORMATION_SCHEMA_ROUTINESRow(string SPECIFIC_CATALOG, string SPECIFIC_SCHEMA, string SPECIFIC_NAME, string ROUTINE_TYPE) {
                INFORMATION_SCHEMA_ROUTINESRow rowINFORMATION_SCHEMA_ROUTINESRow = ((INFORMATION_SCHEMA_ROUTINESRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SPECIFIC_CATALOG,
                        SPECIFIC_SCHEMA,
                        SPECIFIC_NAME,
                        ROUTINE_TYPE};
                rowINFORMATION_SCHEMA_ROUTINESRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowINFORMATION_SCHEMA_ROUTINESRow);
                return rowINFORMATION_SCHEMA_ROUTINESRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public INFORMATION_SCHEMA_ROUTINESRow FindBySPECIFIC_CATALOGSPECIFIC_SCHEMASPECIFIC_NAME(string SPECIFIC_CATALOG, string SPECIFIC_SCHEMA, string SPECIFIC_NAME) {
                return ((INFORMATION_SCHEMA_ROUTINESRow)(this.Rows.Find(new object[] {
                            SPECIFIC_CATALOG,
                            SPECIFIC_SCHEMA,
                            SPECIFIC_NAME})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                INFORMATION_SCHEMA_ROUTINESDataTable cln = ((INFORMATION_SCHEMA_ROUTINESDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new INFORMATION_SCHEMA_ROUTINESDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSPECIFIC_CATALOG = base.Columns["SPECIFIC_CATALOG"];
                this.columnSPECIFIC_SCHEMA = base.Columns["SPECIFIC_SCHEMA"];
                this.columnSPECIFIC_NAME = base.Columns["SPECIFIC_NAME"];
                this.columnROUTINE_TYPE = base.Columns["ROUTINE_TYPE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSPECIFIC_CATALOG = new global::System.Data.DataColumn("SPECIFIC_CATALOG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPECIFIC_CATALOG);
                this.columnSPECIFIC_SCHEMA = new global::System.Data.DataColumn("SPECIFIC_SCHEMA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPECIFIC_SCHEMA);
                this.columnSPECIFIC_NAME = new global::System.Data.DataColumn("SPECIFIC_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPECIFIC_NAME);
                this.columnROUTINE_TYPE = new global::System.Data.DataColumn("ROUTINE_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROUTINE_TYPE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("INFORMATION_SCHEMA_ROUTINESKey1", new global::System.Data.DataColumn[] {
                                this.columnSPECIFIC_CATALOG,
                                this.columnSPECIFIC_SCHEMA,
                                this.columnSPECIFIC_NAME}, true));
                this.columnSPECIFIC_CATALOG.AllowDBNull = false;
                this.columnSPECIFIC_CATALOG.ReadOnly = true;
                this.columnSPECIFIC_CATALOG.MaxLength = 128;
                this.columnSPECIFIC_SCHEMA.AllowDBNull = false;
                this.columnSPECIFIC_SCHEMA.ReadOnly = true;
                this.columnSPECIFIC_SCHEMA.MaxLength = 128;
                this.columnSPECIFIC_NAME.AllowDBNull = false;
                this.columnSPECIFIC_NAME.MaxLength = 128;
                this.columnROUTINE_TYPE.ReadOnly = true;
                this.columnROUTINE_TYPE.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public INFORMATION_SCHEMA_ROUTINESRow NewINFORMATION_SCHEMA_ROUTINESRow() {
                return ((INFORMATION_SCHEMA_ROUTINESRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new INFORMATION_SCHEMA_ROUTINESRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(INFORMATION_SCHEMA_ROUTINESRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.INFORMATION_SCHEMA_ROUTINESRowChanged != null)) {
                    this.INFORMATION_SCHEMA_ROUTINESRowChanged(this, new INFORMATION_SCHEMA_ROUTINESRowChangeEvent(((INFORMATION_SCHEMA_ROUTINESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.INFORMATION_SCHEMA_ROUTINESRowChanging != null)) {
                    this.INFORMATION_SCHEMA_ROUTINESRowChanging(this, new INFORMATION_SCHEMA_ROUTINESRowChangeEvent(((INFORMATION_SCHEMA_ROUTINESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.INFORMATION_SCHEMA_ROUTINESRowDeleted != null)) {
                    this.INFORMATION_SCHEMA_ROUTINESRowDeleted(this, new INFORMATION_SCHEMA_ROUTINESRowChangeEvent(((INFORMATION_SCHEMA_ROUTINESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.INFORMATION_SCHEMA_ROUTINESRowDeleting != null)) {
                    this.INFORMATION_SCHEMA_ROUTINESRowDeleting(this, new INFORMATION_SCHEMA_ROUTINESRowChangeEvent(((INFORMATION_SCHEMA_ROUTINESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveINFORMATION_SCHEMA_ROUTINESRow(INFORMATION_SCHEMA_ROUTINESRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DBStructure ds = new DBStructure();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "INFORMATION_SCHEMA_ROUTINESDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class INFORMATION_SCHEMA_PARAMETERSDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSPECIFIC_CATALOG;
            
            private global::System.Data.DataColumn columnSPECIFIC_SCHEMA;
            
            private global::System.Data.DataColumn columnSPECIFIC_NAME;
            
            private global::System.Data.DataColumn columnORDINAL_POSITION;
            
            private global::System.Data.DataColumn columnPARAMETER_MODE;
            
            private global::System.Data.DataColumn columnDATA_TYPE;
            
            private global::System.Data.DataColumn columnCHARACTER_MAXIMUM_LENGTH;
            
            private global::System.Data.DataColumn columnNUMERIC_PRECISION;
            
            private global::System.Data.DataColumn columnNUMERIC_SCALE;
            
            private global::System.Data.DataColumn columnDATETIME_PRECISION;
            
            private global::System.Data.DataColumn columnPARAMETER_NAME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public INFORMATION_SCHEMA_PARAMETERSDataTable() {
                this.TableName = "INFORMATION_SCHEMA_PARAMETERS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal INFORMATION_SCHEMA_PARAMETERSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected INFORMATION_SCHEMA_PARAMETERSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SPECIFIC_CATALOGColumn {
                get {
                    return this.columnSPECIFIC_CATALOG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SPECIFIC_SCHEMAColumn {
                get {
                    return this.columnSPECIFIC_SCHEMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SPECIFIC_NAMEColumn {
                get {
                    return this.columnSPECIFIC_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ORDINAL_POSITIONColumn {
                get {
                    return this.columnORDINAL_POSITION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PARAMETER_MODEColumn {
                get {
                    return this.columnPARAMETER_MODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DATA_TYPEColumn {
                get {
                    return this.columnDATA_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CHARACTER_MAXIMUM_LENGTHColumn {
                get {
                    return this.columnCHARACTER_MAXIMUM_LENGTH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NUMERIC_PRECISIONColumn {
                get {
                    return this.columnNUMERIC_PRECISION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NUMERIC_SCALEColumn {
                get {
                    return this.columnNUMERIC_SCALE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DATETIME_PRECISIONColumn {
                get {
                    return this.columnDATETIME_PRECISION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PARAMETER_NAMEColumn {
                get {
                    return this.columnPARAMETER_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public INFORMATION_SCHEMA_PARAMETERSRow this[int index] {
                get {
                    return ((INFORMATION_SCHEMA_PARAMETERSRow)(this.Rows[index]));
                }
            }
            
            public event INFORMATION_SCHEMA_PARAMETERSRowChangeEventHandler INFORMATION_SCHEMA_PARAMETERSRowChanging;
            
            public event INFORMATION_SCHEMA_PARAMETERSRowChangeEventHandler INFORMATION_SCHEMA_PARAMETERSRowChanged;
            
            public event INFORMATION_SCHEMA_PARAMETERSRowChangeEventHandler INFORMATION_SCHEMA_PARAMETERSRowDeleting;
            
            public event INFORMATION_SCHEMA_PARAMETERSRowChangeEventHandler INFORMATION_SCHEMA_PARAMETERSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddINFORMATION_SCHEMA_PARAMETERSRow(INFORMATION_SCHEMA_PARAMETERSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public INFORMATION_SCHEMA_PARAMETERSRow AddINFORMATION_SCHEMA_PARAMETERSRow(string SPECIFIC_CATALOG, string SPECIFIC_SCHEMA, string SPECIFIC_NAME, int ORDINAL_POSITION, string PARAMETER_MODE, string DATA_TYPE, int CHARACTER_MAXIMUM_LENGTH, byte NUMERIC_PRECISION, int NUMERIC_SCALE, short DATETIME_PRECISION, string PARAMETER_NAME) {
                INFORMATION_SCHEMA_PARAMETERSRow rowINFORMATION_SCHEMA_PARAMETERSRow = ((INFORMATION_SCHEMA_PARAMETERSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SPECIFIC_CATALOG,
                        SPECIFIC_SCHEMA,
                        SPECIFIC_NAME,
                        ORDINAL_POSITION,
                        PARAMETER_MODE,
                        DATA_TYPE,
                        CHARACTER_MAXIMUM_LENGTH,
                        NUMERIC_PRECISION,
                        NUMERIC_SCALE,
                        DATETIME_PRECISION,
                        PARAMETER_NAME};
                rowINFORMATION_SCHEMA_PARAMETERSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowINFORMATION_SCHEMA_PARAMETERSRow);
                return rowINFORMATION_SCHEMA_PARAMETERSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                INFORMATION_SCHEMA_PARAMETERSDataTable cln = ((INFORMATION_SCHEMA_PARAMETERSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new INFORMATION_SCHEMA_PARAMETERSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSPECIFIC_CATALOG = base.Columns["SPECIFIC_CATALOG"];
                this.columnSPECIFIC_SCHEMA = base.Columns["SPECIFIC_SCHEMA"];
                this.columnSPECIFIC_NAME = base.Columns["SPECIFIC_NAME"];
                this.columnORDINAL_POSITION = base.Columns["ORDINAL_POSITION"];
                this.columnPARAMETER_MODE = base.Columns["PARAMETER_MODE"];
                this.columnDATA_TYPE = base.Columns["DATA_TYPE"];
                this.columnCHARACTER_MAXIMUM_LENGTH = base.Columns["CHARACTER_MAXIMUM_LENGTH"];
                this.columnNUMERIC_PRECISION = base.Columns["NUMERIC_PRECISION"];
                this.columnNUMERIC_SCALE = base.Columns["NUMERIC_SCALE"];
                this.columnDATETIME_PRECISION = base.Columns["DATETIME_PRECISION"];
                this.columnPARAMETER_NAME = base.Columns["PARAMETER_NAME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSPECIFIC_CATALOG = new global::System.Data.DataColumn("SPECIFIC_CATALOG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPECIFIC_CATALOG);
                this.columnSPECIFIC_SCHEMA = new global::System.Data.DataColumn("SPECIFIC_SCHEMA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPECIFIC_SCHEMA);
                this.columnSPECIFIC_NAME = new global::System.Data.DataColumn("SPECIFIC_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPECIFIC_NAME);
                this.columnORDINAL_POSITION = new global::System.Data.DataColumn("ORDINAL_POSITION", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDINAL_POSITION);
                this.columnPARAMETER_MODE = new global::System.Data.DataColumn("PARAMETER_MODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPARAMETER_MODE);
                this.columnDATA_TYPE = new global::System.Data.DataColumn("DATA_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATA_TYPE);
                this.columnCHARACTER_MAXIMUM_LENGTH = new global::System.Data.DataColumn("CHARACTER_MAXIMUM_LENGTH", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHARACTER_MAXIMUM_LENGTH);
                this.columnNUMERIC_PRECISION = new global::System.Data.DataColumn("NUMERIC_PRECISION", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUMERIC_PRECISION);
                this.columnNUMERIC_SCALE = new global::System.Data.DataColumn("NUMERIC_SCALE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUMERIC_SCALE);
                this.columnDATETIME_PRECISION = new global::System.Data.DataColumn("DATETIME_PRECISION", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATETIME_PRECISION);
                this.columnPARAMETER_NAME = new global::System.Data.DataColumn("PARAMETER_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPARAMETER_NAME);
                this.columnSPECIFIC_CATALOG.ReadOnly = true;
                this.columnSPECIFIC_CATALOG.MaxLength = 128;
                this.columnSPECIFIC_SCHEMA.ReadOnly = true;
                this.columnSPECIFIC_SCHEMA.MaxLength = 128;
                this.columnSPECIFIC_NAME.AllowDBNull = false;
                this.columnSPECIFIC_NAME.MaxLength = 128;
                this.columnORDINAL_POSITION.AllowDBNull = false;
                this.columnPARAMETER_MODE.ReadOnly = true;
                this.columnPARAMETER_MODE.MaxLength = 10;
                this.columnDATA_TYPE.ReadOnly = true;
                this.columnDATA_TYPE.MaxLength = 128;
                this.columnCHARACTER_MAXIMUM_LENGTH.ReadOnly = true;
                this.columnNUMERIC_PRECISION.ReadOnly = true;
                this.columnNUMERIC_SCALE.ReadOnly = true;
                this.columnDATETIME_PRECISION.ReadOnly = true;
                this.columnPARAMETER_NAME.ReadOnly = true;
                this.columnPARAMETER_NAME.Caption = "SPECIFIC_CATALOG";
                this.columnPARAMETER_NAME.MaxLength = 128;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public INFORMATION_SCHEMA_PARAMETERSRow NewINFORMATION_SCHEMA_PARAMETERSRow() {
                return ((INFORMATION_SCHEMA_PARAMETERSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new INFORMATION_SCHEMA_PARAMETERSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(INFORMATION_SCHEMA_PARAMETERSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.INFORMATION_SCHEMA_PARAMETERSRowChanged != null)) {
                    this.INFORMATION_SCHEMA_PARAMETERSRowChanged(this, new INFORMATION_SCHEMA_PARAMETERSRowChangeEvent(((INFORMATION_SCHEMA_PARAMETERSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.INFORMATION_SCHEMA_PARAMETERSRowChanging != null)) {
                    this.INFORMATION_SCHEMA_PARAMETERSRowChanging(this, new INFORMATION_SCHEMA_PARAMETERSRowChangeEvent(((INFORMATION_SCHEMA_PARAMETERSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.INFORMATION_SCHEMA_PARAMETERSRowDeleted != null)) {
                    this.INFORMATION_SCHEMA_PARAMETERSRowDeleted(this, new INFORMATION_SCHEMA_PARAMETERSRowChangeEvent(((INFORMATION_SCHEMA_PARAMETERSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.INFORMATION_SCHEMA_PARAMETERSRowDeleting != null)) {
                    this.INFORMATION_SCHEMA_PARAMETERSRowDeleting(this, new INFORMATION_SCHEMA_PARAMETERSRowChangeEvent(((INFORMATION_SCHEMA_PARAMETERSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveINFORMATION_SCHEMA_PARAMETERSRow(INFORMATION_SCHEMA_PARAMETERSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DBStructure ds = new DBStructure();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "INFORMATION_SCHEMA_PARAMETERSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class INFORMATION_SCHEMA_TABLESRow : global::System.Data.DataRow {
            
            private INFORMATION_SCHEMA_TABLESDataTable tableINFORMATION_SCHEMA_TABLES;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal INFORMATION_SCHEMA_TABLESRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableINFORMATION_SCHEMA_TABLES = ((INFORMATION_SCHEMA_TABLESDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TABLE_CATALOG {
                get {
                    return ((string)(this[this.tableINFORMATION_SCHEMA_TABLES.TABLE_CATALOGColumn]));
                }
                set {
                    this[this.tableINFORMATION_SCHEMA_TABLES.TABLE_CATALOGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TABLE_SCHEMA {
                get {
                    return ((string)(this[this.tableINFORMATION_SCHEMA_TABLES.TABLE_SCHEMAColumn]));
                }
                set {
                    this[this.tableINFORMATION_SCHEMA_TABLES.TABLE_SCHEMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TABLE_NAME {
                get {
                    return ((string)(this[this.tableINFORMATION_SCHEMA_TABLES.TABLE_NAMEColumn]));
                }
                set {
                    this[this.tableINFORMATION_SCHEMA_TABLES.TABLE_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TABLE_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableINFORMATION_SCHEMA_TABLES.TABLE_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TABLE_TYPE\' in table \'INFORMATION_SCHEMA_TABLES\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableINFORMATION_SCHEMA_TABLES.TABLE_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTABLE_TYPENull() {
                return this.IsNull(this.tableINFORMATION_SCHEMA_TABLES.TABLE_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTABLE_TYPENull() {
                this[this.tableINFORMATION_SCHEMA_TABLES.TABLE_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public INFORMATION_SCHEMA_COLUMNSRow[] GetINFORMATION_SCHEMA_COLUMNSRows() {
                if ((this.Table.ChildRelations["INFORMATION_SCHEMA_TABLES_INFORMATION_SCHEMA_COLUMNS"] == null)) {
                    return new INFORMATION_SCHEMA_COLUMNSRow[0];
                }
                else {
                    return ((INFORMATION_SCHEMA_COLUMNSRow[])(base.GetChildRows(this.Table.ChildRelations["INFORMATION_SCHEMA_TABLES_INFORMATION_SCHEMA_COLUMNS"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class INFORMATION_SCHEMA_COLUMNSRow : global::System.Data.DataRow {
            
            private INFORMATION_SCHEMA_COLUMNSDataTable tableINFORMATION_SCHEMA_COLUMNS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal INFORMATION_SCHEMA_COLUMNSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableINFORMATION_SCHEMA_COLUMNS = ((INFORMATION_SCHEMA_COLUMNSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TABLE_CATALOG {
                get {
                    try {
                        return ((string)(this[this.tableINFORMATION_SCHEMA_COLUMNS.TABLE_CATALOGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TABLE_CATALOG\' in table \'INFORMATION_SCHEMA_COLUMNS\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableINFORMATION_SCHEMA_COLUMNS.TABLE_CATALOGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TABLE_SCHEMA {
                get {
                    try {
                        return ((string)(this[this.tableINFORMATION_SCHEMA_COLUMNS.TABLE_SCHEMAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TABLE_SCHEMA\' in table \'INFORMATION_SCHEMA_COLUMNS\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableINFORMATION_SCHEMA_COLUMNS.TABLE_SCHEMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TABLE_NAME {
                get {
                    return ((string)(this[this.tableINFORMATION_SCHEMA_COLUMNS.TABLE_NAMEColumn]));
                }
                set {
                    this[this.tableINFORMATION_SCHEMA_COLUMNS.TABLE_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COLUMN_NAME {
                get {
                    try {
                        return ((string)(this[this.tableINFORMATION_SCHEMA_COLUMNS.COLUMN_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COLUMN_NAME\' in table \'INFORMATION_SCHEMA_COLUMNS\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableINFORMATION_SCHEMA_COLUMNS.COLUMN_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ORDINAL_POSITION {
                get {
                    try {
                        return ((int)(this[this.tableINFORMATION_SCHEMA_COLUMNS.ORDINAL_POSITIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ORDINAL_POSITION\' in table \'INFORMATION_SCHEMA_COLUMNS\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableINFORMATION_SCHEMA_COLUMNS.ORDINAL_POSITIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COLUMN_DEFAULT {
                get {
                    try {
                        return ((string)(this[this.tableINFORMATION_SCHEMA_COLUMNS.COLUMN_DEFAULTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COLUMN_DEFAULT\' in table \'INFORMATION_SCHEMA_COLUMNS\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableINFORMATION_SCHEMA_COLUMNS.COLUMN_DEFAULTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IS_NULLABLE {
                get {
                    try {
                        return ((string)(this[this.tableINFORMATION_SCHEMA_COLUMNS.IS_NULLABLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IS_NULLABLE\' in table \'INFORMATION_SCHEMA_COLUMNS\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableINFORMATION_SCHEMA_COLUMNS.IS_NULLABLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DATA_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableINFORMATION_SCHEMA_COLUMNS.DATA_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DATA_TYPE\' in table \'INFORMATION_SCHEMA_COLUMNS\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableINFORMATION_SCHEMA_COLUMNS.DATA_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CHARACTER_MAXIMUM_LENGTH {
                get {
                    try {
                        return ((int)(this[this.tableINFORMATION_SCHEMA_COLUMNS.CHARACTER_MAXIMUM_LENGTHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CHARACTER_MAXIMUM_LENGTH\' in table \'INFORMATION_SCHEMA_COLU" +
                                "MNS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINFORMATION_SCHEMA_COLUMNS.CHARACTER_MAXIMUM_LENGTHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CHARACTER_OCTET_LENGTH {
                get {
                    try {
                        return ((int)(this[this.tableINFORMATION_SCHEMA_COLUMNS.CHARACTER_OCTET_LENGTHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CHARACTER_OCTET_LENGTH\' in table \'INFORMATION_SCHEMA_COLUMN" +
                                "S\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINFORMATION_SCHEMA_COLUMNS.CHARACTER_OCTET_LENGTHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte NUMERIC_PRECISION {
                get {
                    try {
                        return ((byte)(this[this.tableINFORMATION_SCHEMA_COLUMNS.NUMERIC_PRECISIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NUMERIC_PRECISION\' in table \'INFORMATION_SCHEMA_COLUMNS\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableINFORMATION_SCHEMA_COLUMNS.NUMERIC_PRECISIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short NUMERIC_PRECISION_RADIX {
                get {
                    try {
                        return ((short)(this[this.tableINFORMATION_SCHEMA_COLUMNS.NUMERIC_PRECISION_RADIXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NUMERIC_PRECISION_RADIX\' in table \'INFORMATION_SCHEMA_COLUM" +
                                "NS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINFORMATION_SCHEMA_COLUMNS.NUMERIC_PRECISION_RADIXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NUMERIC_SCALE {
                get {
                    try {
                        return ((int)(this[this.tableINFORMATION_SCHEMA_COLUMNS.NUMERIC_SCALEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NUMERIC_SCALE\' in table \'INFORMATION_SCHEMA_COLUMNS\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableINFORMATION_SCHEMA_COLUMNS.NUMERIC_SCALEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short DATETIME_PRECISION {
                get {
                    try {
                        return ((short)(this[this.tableINFORMATION_SCHEMA_COLUMNS.DATETIME_PRECISIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DATETIME_PRECISION\' in table \'INFORMATION_SCHEMA_COLUMNS\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableINFORMATION_SCHEMA_COLUMNS.DATETIME_PRECISIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CHARACTER_SET_CATALOG {
                get {
                    try {
                        return ((string)(this[this.tableINFORMATION_SCHEMA_COLUMNS.CHARACTER_SET_CATALOGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CHARACTER_SET_CATALOG\' in table \'INFORMATION_SCHEMA_COLUMNS" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINFORMATION_SCHEMA_COLUMNS.CHARACTER_SET_CATALOGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CHARACTER_SET_SCHEMA {
                get {
                    try {
                        return ((string)(this[this.tableINFORMATION_SCHEMA_COLUMNS.CHARACTER_SET_SCHEMAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CHARACTER_SET_SCHEMA\' in table \'INFORMATION_SCHEMA_COLUMNS\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINFORMATION_SCHEMA_COLUMNS.CHARACTER_SET_SCHEMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CHARACTER_SET_NAME {
                get {
                    try {
                        return ((string)(this[this.tableINFORMATION_SCHEMA_COLUMNS.CHARACTER_SET_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CHARACTER_SET_NAME\' in table \'INFORMATION_SCHEMA_COLUMNS\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableINFORMATION_SCHEMA_COLUMNS.CHARACTER_SET_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COLLATION_CATALOG {
                get {
                    try {
                        return ((string)(this[this.tableINFORMATION_SCHEMA_COLUMNS.COLLATION_CATALOGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COLLATION_CATALOG\' in table \'INFORMATION_SCHEMA_COLUMNS\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableINFORMATION_SCHEMA_COLUMNS.COLLATION_CATALOGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COLLATION_SCHEMA {
                get {
                    try {
                        return ((string)(this[this.tableINFORMATION_SCHEMA_COLUMNS.COLLATION_SCHEMAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COLLATION_SCHEMA\' in table \'INFORMATION_SCHEMA_COLUMNS\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableINFORMATION_SCHEMA_COLUMNS.COLLATION_SCHEMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COLLATION_NAME {
                get {
                    try {
                        return ((string)(this[this.tableINFORMATION_SCHEMA_COLUMNS.COLLATION_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COLLATION_NAME\' in table \'INFORMATION_SCHEMA_COLUMNS\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableINFORMATION_SCHEMA_COLUMNS.COLLATION_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DOMAIN_CATALOG {
                get {
                    try {
                        return ((string)(this[this.tableINFORMATION_SCHEMA_COLUMNS.DOMAIN_CATALOGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DOMAIN_CATALOG\' in table \'INFORMATION_SCHEMA_COLUMNS\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableINFORMATION_SCHEMA_COLUMNS.DOMAIN_CATALOGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DOMAIN_SCHEMA {
                get {
                    try {
                        return ((string)(this[this.tableINFORMATION_SCHEMA_COLUMNS.DOMAIN_SCHEMAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DOMAIN_SCHEMA\' in table \'INFORMATION_SCHEMA_COLUMNS\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableINFORMATION_SCHEMA_COLUMNS.DOMAIN_SCHEMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DOMAIN_NAME {
                get {
                    try {
                        return ((string)(this[this.tableINFORMATION_SCHEMA_COLUMNS.DOMAIN_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DOMAIN_NAME\' in table \'INFORMATION_SCHEMA_COLUMNS\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableINFORMATION_SCHEMA_COLUMNS.DOMAIN_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IS_PRIMARY_KEY {
                get {
                    try {
                        return ((int)(this[this.tableINFORMATION_SCHEMA_COLUMNS.IS_PRIMARY_KEYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IS_PRIMARY_KEY\' in table \'INFORMATION_SCHEMA_COLUMNS\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableINFORMATION_SCHEMA_COLUMNS.IS_PRIMARY_KEYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IS_IDENTITY {
                get {
                    try {
                        return ((int)(this[this.tableINFORMATION_SCHEMA_COLUMNS.IS_IDENTITYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IS_IDENTITY\' in table \'INFORMATION_SCHEMA_COLUMNS\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableINFORMATION_SCHEMA_COLUMNS.IS_IDENTITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public INFORMATION_SCHEMA_TABLESRow INFORMATION_SCHEMA_TABLESRowParent {
                get {
                    return ((INFORMATION_SCHEMA_TABLESRow)(this.GetParentRow(this.Table.ParentRelations["INFORMATION_SCHEMA_TABLES_INFORMATION_SCHEMA_COLUMNS"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["INFORMATION_SCHEMA_TABLES_INFORMATION_SCHEMA_COLUMNS"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTABLE_CATALOGNull() {
                return this.IsNull(this.tableINFORMATION_SCHEMA_COLUMNS.TABLE_CATALOGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTABLE_CATALOGNull() {
                this[this.tableINFORMATION_SCHEMA_COLUMNS.TABLE_CATALOGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTABLE_SCHEMANull() {
                return this.IsNull(this.tableINFORMATION_SCHEMA_COLUMNS.TABLE_SCHEMAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTABLE_SCHEMANull() {
                this[this.tableINFORMATION_SCHEMA_COLUMNS.TABLE_SCHEMAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOLUMN_NAMENull() {
                return this.IsNull(this.tableINFORMATION_SCHEMA_COLUMNS.COLUMN_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOLUMN_NAMENull() {
                this[this.tableINFORMATION_SCHEMA_COLUMNS.COLUMN_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsORDINAL_POSITIONNull() {
                return this.IsNull(this.tableINFORMATION_SCHEMA_COLUMNS.ORDINAL_POSITIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetORDINAL_POSITIONNull() {
                this[this.tableINFORMATION_SCHEMA_COLUMNS.ORDINAL_POSITIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOLUMN_DEFAULTNull() {
                return this.IsNull(this.tableINFORMATION_SCHEMA_COLUMNS.COLUMN_DEFAULTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOLUMN_DEFAULTNull() {
                this[this.tableINFORMATION_SCHEMA_COLUMNS.COLUMN_DEFAULTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIS_NULLABLENull() {
                return this.IsNull(this.tableINFORMATION_SCHEMA_COLUMNS.IS_NULLABLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIS_NULLABLENull() {
                this[this.tableINFORMATION_SCHEMA_COLUMNS.IS_NULLABLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATA_TYPENull() {
                return this.IsNull(this.tableINFORMATION_SCHEMA_COLUMNS.DATA_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATA_TYPENull() {
                this[this.tableINFORMATION_SCHEMA_COLUMNS.DATA_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCHARACTER_MAXIMUM_LENGTHNull() {
                return this.IsNull(this.tableINFORMATION_SCHEMA_COLUMNS.CHARACTER_MAXIMUM_LENGTHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCHARACTER_MAXIMUM_LENGTHNull() {
                this[this.tableINFORMATION_SCHEMA_COLUMNS.CHARACTER_MAXIMUM_LENGTHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCHARACTER_OCTET_LENGTHNull() {
                return this.IsNull(this.tableINFORMATION_SCHEMA_COLUMNS.CHARACTER_OCTET_LENGTHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCHARACTER_OCTET_LENGTHNull() {
                this[this.tableINFORMATION_SCHEMA_COLUMNS.CHARACTER_OCTET_LENGTHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNUMERIC_PRECISIONNull() {
                return this.IsNull(this.tableINFORMATION_SCHEMA_COLUMNS.NUMERIC_PRECISIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNUMERIC_PRECISIONNull() {
                this[this.tableINFORMATION_SCHEMA_COLUMNS.NUMERIC_PRECISIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNUMERIC_PRECISION_RADIXNull() {
                return this.IsNull(this.tableINFORMATION_SCHEMA_COLUMNS.NUMERIC_PRECISION_RADIXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNUMERIC_PRECISION_RADIXNull() {
                this[this.tableINFORMATION_SCHEMA_COLUMNS.NUMERIC_PRECISION_RADIXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNUMERIC_SCALENull() {
                return this.IsNull(this.tableINFORMATION_SCHEMA_COLUMNS.NUMERIC_SCALEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNUMERIC_SCALENull() {
                this[this.tableINFORMATION_SCHEMA_COLUMNS.NUMERIC_SCALEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATETIME_PRECISIONNull() {
                return this.IsNull(this.tableINFORMATION_SCHEMA_COLUMNS.DATETIME_PRECISIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATETIME_PRECISIONNull() {
                this[this.tableINFORMATION_SCHEMA_COLUMNS.DATETIME_PRECISIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCHARACTER_SET_CATALOGNull() {
                return this.IsNull(this.tableINFORMATION_SCHEMA_COLUMNS.CHARACTER_SET_CATALOGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCHARACTER_SET_CATALOGNull() {
                this[this.tableINFORMATION_SCHEMA_COLUMNS.CHARACTER_SET_CATALOGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCHARACTER_SET_SCHEMANull() {
                return this.IsNull(this.tableINFORMATION_SCHEMA_COLUMNS.CHARACTER_SET_SCHEMAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCHARACTER_SET_SCHEMANull() {
                this[this.tableINFORMATION_SCHEMA_COLUMNS.CHARACTER_SET_SCHEMAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCHARACTER_SET_NAMENull() {
                return this.IsNull(this.tableINFORMATION_SCHEMA_COLUMNS.CHARACTER_SET_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCHARACTER_SET_NAMENull() {
                this[this.tableINFORMATION_SCHEMA_COLUMNS.CHARACTER_SET_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOLLATION_CATALOGNull() {
                return this.IsNull(this.tableINFORMATION_SCHEMA_COLUMNS.COLLATION_CATALOGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOLLATION_CATALOGNull() {
                this[this.tableINFORMATION_SCHEMA_COLUMNS.COLLATION_CATALOGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOLLATION_SCHEMANull() {
                return this.IsNull(this.tableINFORMATION_SCHEMA_COLUMNS.COLLATION_SCHEMAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOLLATION_SCHEMANull() {
                this[this.tableINFORMATION_SCHEMA_COLUMNS.COLLATION_SCHEMAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOLLATION_NAMENull() {
                return this.IsNull(this.tableINFORMATION_SCHEMA_COLUMNS.COLLATION_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOLLATION_NAMENull() {
                this[this.tableINFORMATION_SCHEMA_COLUMNS.COLLATION_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDOMAIN_CATALOGNull() {
                return this.IsNull(this.tableINFORMATION_SCHEMA_COLUMNS.DOMAIN_CATALOGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDOMAIN_CATALOGNull() {
                this[this.tableINFORMATION_SCHEMA_COLUMNS.DOMAIN_CATALOGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDOMAIN_SCHEMANull() {
                return this.IsNull(this.tableINFORMATION_SCHEMA_COLUMNS.DOMAIN_SCHEMAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDOMAIN_SCHEMANull() {
                this[this.tableINFORMATION_SCHEMA_COLUMNS.DOMAIN_SCHEMAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDOMAIN_NAMENull() {
                return this.IsNull(this.tableINFORMATION_SCHEMA_COLUMNS.DOMAIN_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDOMAIN_NAMENull() {
                this[this.tableINFORMATION_SCHEMA_COLUMNS.DOMAIN_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIS_PRIMARY_KEYNull() {
                return this.IsNull(this.tableINFORMATION_SCHEMA_COLUMNS.IS_PRIMARY_KEYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIS_PRIMARY_KEYNull() {
                this[this.tableINFORMATION_SCHEMA_COLUMNS.IS_PRIMARY_KEYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIS_IDENTITYNull() {
                return this.IsNull(this.tableINFORMATION_SCHEMA_COLUMNS.IS_IDENTITYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIS_IDENTITYNull() {
                this[this.tableINFORMATION_SCHEMA_COLUMNS.IS_IDENTITYColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class INFORMATION_SCHEMA_ROUTINESRow : global::System.Data.DataRow {
            
            private INFORMATION_SCHEMA_ROUTINESDataTable tableINFORMATION_SCHEMA_ROUTINES;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal INFORMATION_SCHEMA_ROUTINESRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableINFORMATION_SCHEMA_ROUTINES = ((INFORMATION_SCHEMA_ROUTINESDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SPECIFIC_CATALOG {
                get {
                    return ((string)(this[this.tableINFORMATION_SCHEMA_ROUTINES.SPECIFIC_CATALOGColumn]));
                }
                set {
                    this[this.tableINFORMATION_SCHEMA_ROUTINES.SPECIFIC_CATALOGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SPECIFIC_SCHEMA {
                get {
                    return ((string)(this[this.tableINFORMATION_SCHEMA_ROUTINES.SPECIFIC_SCHEMAColumn]));
                }
                set {
                    this[this.tableINFORMATION_SCHEMA_ROUTINES.SPECIFIC_SCHEMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SPECIFIC_NAME {
                get {
                    return ((string)(this[this.tableINFORMATION_SCHEMA_ROUTINES.SPECIFIC_NAMEColumn]));
                }
                set {
                    this[this.tableINFORMATION_SCHEMA_ROUTINES.SPECIFIC_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ROUTINE_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableINFORMATION_SCHEMA_ROUTINES.ROUTINE_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ROUTINE_TYPE\' in table \'INFORMATION_SCHEMA_ROUTINES\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableINFORMATION_SCHEMA_ROUTINES.ROUTINE_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsROUTINE_TYPENull() {
                return this.IsNull(this.tableINFORMATION_SCHEMA_ROUTINES.ROUTINE_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetROUTINE_TYPENull() {
                this[this.tableINFORMATION_SCHEMA_ROUTINES.ROUTINE_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public INFORMATION_SCHEMA_PARAMETERSRow[] GetINFORMATION_SCHEMA_PARAMETERSRows() {
                if ((this.Table.ChildRelations["INFORMATION_SCHEMA_ROUTINES_INFORMATION_SCHEMA_PARAMETERS"] == null)) {
                    return new INFORMATION_SCHEMA_PARAMETERSRow[0];
                }
                else {
                    return ((INFORMATION_SCHEMA_PARAMETERSRow[])(base.GetChildRows(this.Table.ChildRelations["INFORMATION_SCHEMA_ROUTINES_INFORMATION_SCHEMA_PARAMETERS"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class INFORMATION_SCHEMA_PARAMETERSRow : global::System.Data.DataRow {
            
            private INFORMATION_SCHEMA_PARAMETERSDataTable tableINFORMATION_SCHEMA_PARAMETERS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal INFORMATION_SCHEMA_PARAMETERSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableINFORMATION_SCHEMA_PARAMETERS = ((INFORMATION_SCHEMA_PARAMETERSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SPECIFIC_CATALOG {
                get {
                    try {
                        return ((string)(this[this.tableINFORMATION_SCHEMA_PARAMETERS.SPECIFIC_CATALOGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SPECIFIC_CATALOG\' in table \'INFORMATION_SCHEMA_PARAMETERS\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINFORMATION_SCHEMA_PARAMETERS.SPECIFIC_CATALOGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SPECIFIC_SCHEMA {
                get {
                    try {
                        return ((string)(this[this.tableINFORMATION_SCHEMA_PARAMETERS.SPECIFIC_SCHEMAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SPECIFIC_SCHEMA\' in table \'INFORMATION_SCHEMA_PARAMETERS\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableINFORMATION_SCHEMA_PARAMETERS.SPECIFIC_SCHEMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SPECIFIC_NAME {
                get {
                    return ((string)(this[this.tableINFORMATION_SCHEMA_PARAMETERS.SPECIFIC_NAMEColumn]));
                }
                set {
                    this[this.tableINFORMATION_SCHEMA_PARAMETERS.SPECIFIC_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ORDINAL_POSITION {
                get {
                    return ((int)(this[this.tableINFORMATION_SCHEMA_PARAMETERS.ORDINAL_POSITIONColumn]));
                }
                set {
                    this[this.tableINFORMATION_SCHEMA_PARAMETERS.ORDINAL_POSITIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PARAMETER_MODE {
                get {
                    try {
                        return ((string)(this[this.tableINFORMATION_SCHEMA_PARAMETERS.PARAMETER_MODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PARAMETER_MODE\' in table \'INFORMATION_SCHEMA_PARAMETERS\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableINFORMATION_SCHEMA_PARAMETERS.PARAMETER_MODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DATA_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableINFORMATION_SCHEMA_PARAMETERS.DATA_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DATA_TYPE\' in table \'INFORMATION_SCHEMA_PARAMETERS\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableINFORMATION_SCHEMA_PARAMETERS.DATA_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CHARACTER_MAXIMUM_LENGTH {
                get {
                    try {
                        return ((int)(this[this.tableINFORMATION_SCHEMA_PARAMETERS.CHARACTER_MAXIMUM_LENGTHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CHARACTER_MAXIMUM_LENGTH\' in table \'INFORMATION_SCHEMA_PARA" +
                                "METERS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINFORMATION_SCHEMA_PARAMETERS.CHARACTER_MAXIMUM_LENGTHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte NUMERIC_PRECISION {
                get {
                    try {
                        return ((byte)(this[this.tableINFORMATION_SCHEMA_PARAMETERS.NUMERIC_PRECISIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NUMERIC_PRECISION\' in table \'INFORMATION_SCHEMA_PARAMETERS\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINFORMATION_SCHEMA_PARAMETERS.NUMERIC_PRECISIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NUMERIC_SCALE {
                get {
                    try {
                        return ((int)(this[this.tableINFORMATION_SCHEMA_PARAMETERS.NUMERIC_SCALEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NUMERIC_SCALE\' in table \'INFORMATION_SCHEMA_PARAMETERS\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableINFORMATION_SCHEMA_PARAMETERS.NUMERIC_SCALEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short DATETIME_PRECISION {
                get {
                    try {
                        return ((short)(this[this.tableINFORMATION_SCHEMA_PARAMETERS.DATETIME_PRECISIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DATETIME_PRECISION\' in table \'INFORMATION_SCHEMA_PARAMETERS" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINFORMATION_SCHEMA_PARAMETERS.DATETIME_PRECISIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PARAMETER_NAME {
                get {
                    try {
                        return ((string)(this[this.tableINFORMATION_SCHEMA_PARAMETERS.PARAMETER_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PARAMETER_NAME\' in table \'INFORMATION_SCHEMA_PARAMETERS\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableINFORMATION_SCHEMA_PARAMETERS.PARAMETER_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public INFORMATION_SCHEMA_ROUTINESRow INFORMATION_SCHEMA_ROUTINESRowParent {
                get {
                    return ((INFORMATION_SCHEMA_ROUTINESRow)(this.GetParentRow(this.Table.ParentRelations["INFORMATION_SCHEMA_ROUTINES_INFORMATION_SCHEMA_PARAMETERS"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["INFORMATION_SCHEMA_ROUTINES_INFORMATION_SCHEMA_PARAMETERS"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSPECIFIC_CATALOGNull() {
                return this.IsNull(this.tableINFORMATION_SCHEMA_PARAMETERS.SPECIFIC_CATALOGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSPECIFIC_CATALOGNull() {
                this[this.tableINFORMATION_SCHEMA_PARAMETERS.SPECIFIC_CATALOGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSPECIFIC_SCHEMANull() {
                return this.IsNull(this.tableINFORMATION_SCHEMA_PARAMETERS.SPECIFIC_SCHEMAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSPECIFIC_SCHEMANull() {
                this[this.tableINFORMATION_SCHEMA_PARAMETERS.SPECIFIC_SCHEMAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPARAMETER_MODENull() {
                return this.IsNull(this.tableINFORMATION_SCHEMA_PARAMETERS.PARAMETER_MODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPARAMETER_MODENull() {
                this[this.tableINFORMATION_SCHEMA_PARAMETERS.PARAMETER_MODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATA_TYPENull() {
                return this.IsNull(this.tableINFORMATION_SCHEMA_PARAMETERS.DATA_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATA_TYPENull() {
                this[this.tableINFORMATION_SCHEMA_PARAMETERS.DATA_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCHARACTER_MAXIMUM_LENGTHNull() {
                return this.IsNull(this.tableINFORMATION_SCHEMA_PARAMETERS.CHARACTER_MAXIMUM_LENGTHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCHARACTER_MAXIMUM_LENGTHNull() {
                this[this.tableINFORMATION_SCHEMA_PARAMETERS.CHARACTER_MAXIMUM_LENGTHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNUMERIC_PRECISIONNull() {
                return this.IsNull(this.tableINFORMATION_SCHEMA_PARAMETERS.NUMERIC_PRECISIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNUMERIC_PRECISIONNull() {
                this[this.tableINFORMATION_SCHEMA_PARAMETERS.NUMERIC_PRECISIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNUMERIC_SCALENull() {
                return this.IsNull(this.tableINFORMATION_SCHEMA_PARAMETERS.NUMERIC_SCALEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNUMERIC_SCALENull() {
                this[this.tableINFORMATION_SCHEMA_PARAMETERS.NUMERIC_SCALEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATETIME_PRECISIONNull() {
                return this.IsNull(this.tableINFORMATION_SCHEMA_PARAMETERS.DATETIME_PRECISIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATETIME_PRECISIONNull() {
                this[this.tableINFORMATION_SCHEMA_PARAMETERS.DATETIME_PRECISIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPARAMETER_NAMENull() {
                return this.IsNull(this.tableINFORMATION_SCHEMA_PARAMETERS.PARAMETER_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPARAMETER_NAMENull() {
                this[this.tableINFORMATION_SCHEMA_PARAMETERS.PARAMETER_NAMEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class INFORMATION_SCHEMA_TABLESRowChangeEvent : global::System.EventArgs {
            
            private INFORMATION_SCHEMA_TABLESRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public INFORMATION_SCHEMA_TABLESRowChangeEvent(INFORMATION_SCHEMA_TABLESRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public INFORMATION_SCHEMA_TABLESRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class INFORMATION_SCHEMA_COLUMNSRowChangeEvent : global::System.EventArgs {
            
            private INFORMATION_SCHEMA_COLUMNSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public INFORMATION_SCHEMA_COLUMNSRowChangeEvent(INFORMATION_SCHEMA_COLUMNSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public INFORMATION_SCHEMA_COLUMNSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class INFORMATION_SCHEMA_ROUTINESRowChangeEvent : global::System.EventArgs {
            
            private INFORMATION_SCHEMA_ROUTINESRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public INFORMATION_SCHEMA_ROUTINESRowChangeEvent(INFORMATION_SCHEMA_ROUTINESRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public INFORMATION_SCHEMA_ROUTINESRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class INFORMATION_SCHEMA_PARAMETERSRowChangeEvent : global::System.EventArgs {
            
            private INFORMATION_SCHEMA_PARAMETERSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public INFORMATION_SCHEMA_PARAMETERSRowChangeEvent(INFORMATION_SCHEMA_PARAMETERSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public INFORMATION_SCHEMA_PARAMETERSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591