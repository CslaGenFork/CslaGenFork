<?xml version="1.0"?>
<doc>
    <assembly>
        <name>nunit.private</name>
    </assembly>
    <members>
        <member name="T:NUnit.Framework.Private">
            <summary>Class to execute private methods mainly for unit test purposes.</summary>
        </member>
        <member name="M:NUnit.Framework.Private.RunStaticMethod(System.Type,System.String,System.Object[])">
            <summary>Invokes the static method represented by methodName, 
             using the specified parameters.</summary>
            <param name="type">The class under test; use "typeof(class)" form</param>
            <param name="methodName">String with the name of the method to be invoked</param>
            <param name="objParams">An argument list for the invoked method. This is an array 
             of objects with the same number, order, and type as the parameters of the method to 
             be invoked. If there are no parameters, "objParams" should be null.</param>
            <returns>An object containing the return value of the invoked method.</returns>
        </member>
        <member name="M:NUnit.Framework.Private.RunStaticMethod(System.Type,System.String,NUnit.Framework.Private.MethodParam[]@)">
            <summary>Invokes the static method represented by methodName, 
             using the specified parameters.</summary>
            <param name="type">The class under test; use "typeof(class)" form</param>
            <param name="methodName">String with the name of the method to be invoked</param>
            <param name="methodParams">An argument list for the invoked method. This is an array 
             of MethodParam with the same number, order, and type as the parameters of the method to 
             be invoked. If there are no parameters, "methodParams" should be null.</param>
            <returns>An object containing the return value of the invoked method.</returns>
        </member>
        <member name="M:NUnit.Framework.Private.RunInstanceMethod(System.Type,System.String,System.Object,System.Object[])">
            <summary>Invokes the method represented by the current instance (objInstance), 
             using the specified parameters.</summary>
            <param name="type">The class under test; use "typeof(class)" form</param>
            <param name="methodName">String with the name of the method to be invoked</param>
            <param name="objInstance">The object on which to invoke the method.</param>
            <param name="objParams">An argument list for the invoked method. This is an array 
             of objects with the same number, order, and type as the parameters of the method to 
             be invoked. If there are no parameters, "objParams" should be null.</param>
            <returns>An object containing the return value of the invoked method.</returns>
        </member>
        <member name="M:NUnit.Framework.Private.RunInstanceMethod(System.Type,System.String,System.Object,NUnit.Framework.Private.MethodParam[]@)">
            <summary>Invokes the method represented by the current instance (objInstance), 
             using the specified parameters.</summary>
            <param name="type">The class under test; use "typeof(class)" form</param>
            <param name="methodName">String with the name of the method to be invoked</param>
            <param name="objInstance">The object on which to invoke the method.</param>
            <param name="methodParams">An argument list for the invoked method. This is an array 
             of MethodParam with the same number, order, and type as the parameters of the method to 
             be invoked. If there are no parameters, "methodParams" should be null.</param>
            <returns>An object containing the return value of the invoked method.</returns>
        </member>
        <member name="M:NUnit.Framework.Private.ConvertToMethodParams(System.Object[])">
            <summary>Converts parameters from an array of object to an array of "MethodParam"</summary>
            <param name="objParams">An argument list for the invoked method. This is an array 
             of objects with the same number, order, and type as the parameters of the method to 
             be invoked. If there are no parameters, "objParams" should be null.</param>
            <returns>An array of MethodParam that contain the parameters of the method call</returns>
        </member>
        <member name="T:NUnit.Framework.Private.MethodParam">
            <summary>Object to store the argument list for the invoked method. When there are 
             "ref" parameters a "MethodParam" array should be used instead of a "object" array.</summary>
        </member>
        <member name="P:NUnit.Framework.Private.MethodParam.Param">
            <summary>Object member that contains the parameter value.</summary>
        </member>
        <member name="P:NUnit.Framework.Private.MethodParam.IsByRef">
            <summary>Boolean member that contains the "ref" status of the parameter.</summary>
        </member>
    </members>
</doc>
